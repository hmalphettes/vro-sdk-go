// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SdkModuleType sdk module type
//
// swagger:model SdkModuleType
type SdkModuleType struct {

	// build
	Build int64 `json:"build,omitempty" xml:"build,attr,omitempty"`

	// description
	Description string `json:"description,omitempty" xml:"description,attr,omitempty"`

	// details link
	DetailsLink string `json:"detailsLink,omitempty" xml:"detailsLink,attr,omitempty"`

	// external Url
	ExternalURL string `json:"externalUrl,omitempty" xml:"externalUrl,attr,omitempty"`

	// icon
	Icon string `json:"icon,omitempty" xml:"icon,attr,omitempty"`

	// name
	Name string `json:"name,omitempty" xml:"name,attr,omitempty"`

	// state
	// Enum: [RELEASE ALPHA BETA DEPRECATED]
	State string `json:"state,omitempty" xml:"state,attr,omitempty"`

	// version
	Version string `json:"version,omitempty" xml:"version,attr,omitempty"`
}

// Validate validates this sdk module type
func (m *SdkModuleType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var sdkModuleTypeTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RELEASE","ALPHA","BETA","DEPRECATED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sdkModuleTypeTypeStatePropEnum = append(sdkModuleTypeTypeStatePropEnum, v)
	}
}

const (

	// SdkModuleTypeStateRELEASE captures enum value "RELEASE"
	SdkModuleTypeStateRELEASE string = "RELEASE"

	// SdkModuleTypeStateALPHA captures enum value "ALPHA"
	SdkModuleTypeStateALPHA string = "ALPHA"

	// SdkModuleTypeStateBETA captures enum value "BETA"
	SdkModuleTypeStateBETA string = "BETA"

	// SdkModuleTypeStateDEPRECATED captures enum value "DEPRECATED"
	SdkModuleTypeStateDEPRECATED string = "DEPRECATED"
)

// prop value enum
func (m *SdkModuleType) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, sdkModuleTypeTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SdkModuleType) validateState(formats strfmt.Registry) error {
	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sdk module type based on context it is used
func (m *SdkModuleType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SdkModuleType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SdkModuleType) UnmarshalBinary(b []byte) error {
	var res SdkModuleType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
