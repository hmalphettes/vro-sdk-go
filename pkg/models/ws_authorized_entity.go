// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WsAuthorizedEntity ws authorized entity
//
// swagger:model WsAuthorizedEntity
type WsAuthorizedEntity struct {

	// domain
	Domain string `json:"domain,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// role
	// Enum: [ADMINISTRTATOR MEMBER]
	Role string `json:"role,omitempty"`

	// type
	// Enum: [GROUP USER]
	Type string `json:"type,omitempty"`
}

// Validate validates this ws authorized entity
func (m *WsAuthorizedEntity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var wsAuthorizedEntityTypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ADMINISTRTATOR","MEMBER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		wsAuthorizedEntityTypeRolePropEnum = append(wsAuthorizedEntityTypeRolePropEnum, v)
	}
}

const (

	// WsAuthorizedEntityRoleADMINISTRTATOR captures enum value "ADMINISTRTATOR"
	WsAuthorizedEntityRoleADMINISTRTATOR string = "ADMINISTRTATOR"

	// WsAuthorizedEntityRoleMEMBER captures enum value "MEMBER"
	WsAuthorizedEntityRoleMEMBER string = "MEMBER"
)

// prop value enum
func (m *WsAuthorizedEntity) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, wsAuthorizedEntityTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *WsAuthorizedEntity) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(m.Role) { // not required
		return nil
	}

	// value enum
	if err := m.validateRoleEnum("role", "body", m.Role); err != nil {
		return err
	}

	return nil
}

var wsAuthorizedEntityTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GROUP","USER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		wsAuthorizedEntityTypeTypePropEnum = append(wsAuthorizedEntityTypeTypePropEnum, v)
	}
}

const (

	// WsAuthorizedEntityTypeGROUP captures enum value "GROUP"
	WsAuthorizedEntityTypeGROUP string = "GROUP"

	// WsAuthorizedEntityTypeUSER captures enum value "USER"
	WsAuthorizedEntityTypeUSER string = "USER"
)

// prop value enum
func (m *WsAuthorizedEntity) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, wsAuthorizedEntityTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *WsAuthorizedEntity) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ws authorized entity based on context it is used
func (m *WsAuthorizedEntity) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WsAuthorizedEntity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WsAuthorizedEntity) UnmarshalBinary(b []byte) error {
	var res WsAuthorizedEntity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
