// Code generated by go-swagger; DO NOT EDIT.

package catalog_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// TagObjectReader is a Reader for the TagObject structure.
type TagObjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TagObjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewTagObjectNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTagObjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTagObjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /catalog/{namespace}/{type}/{id}/tags] tagObject", response, response.Code())
	}
}

// NewTagObjectNoContent creates a TagObjectNoContent with default headers values
func NewTagObjectNoContent() *TagObjectNoContent {
	return &TagObjectNoContent{}
}

/*
TagObjectNoContent describes a response with status code 204, with default header values.

No content
*/
type TagObjectNoContent struct {
}

// IsSuccess returns true when this tag object no content response has a 2xx status code
func (o *TagObjectNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tag object no content response has a 3xx status code
func (o *TagObjectNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tag object no content response has a 4xx status code
func (o *TagObjectNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this tag object no content response has a 5xx status code
func (o *TagObjectNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this tag object no content response a status code equal to that given
func (o *TagObjectNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the tag object no content response
func (o *TagObjectNoContent) Code() int {
	return 204
}

func (o *TagObjectNoContent) Error() string {
	return fmt.Sprintf("[POST /catalog/{namespace}/{type}/{id}/tags][%d] tagObjectNoContent ", 204)
}

func (o *TagObjectNoContent) String() string {
	return fmt.Sprintf("[POST /catalog/{namespace}/{type}/{id}/tags][%d] tagObjectNoContent ", 204)
}

func (o *TagObjectNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTagObjectBadRequest creates a TagObjectBadRequest with default headers values
func NewTagObjectBadRequest() *TagObjectBadRequest {
	return &TagObjectBadRequest{}
}

/*
TagObjectBadRequest describes a response with status code 400, with default header values.

Request is not valid (validation error)
*/
type TagObjectBadRequest struct {
}

// IsSuccess returns true when this tag object bad request response has a 2xx status code
func (o *TagObjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tag object bad request response has a 3xx status code
func (o *TagObjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tag object bad request response has a 4xx status code
func (o *TagObjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this tag object bad request response has a 5xx status code
func (o *TagObjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this tag object bad request response a status code equal to that given
func (o *TagObjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the tag object bad request response
func (o *TagObjectBadRequest) Code() int {
	return 400
}

func (o *TagObjectBadRequest) Error() string {
	return fmt.Sprintf("[POST /catalog/{namespace}/{type}/{id}/tags][%d] tagObjectBadRequest ", 400)
}

func (o *TagObjectBadRequest) String() string {
	return fmt.Sprintf("[POST /catalog/{namespace}/{type}/{id}/tags][%d] tagObjectBadRequest ", 400)
}

func (o *TagObjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTagObjectUnauthorized creates a TagObjectUnauthorized with default headers values
func NewTagObjectUnauthorized() *TagObjectUnauthorized {
	return &TagObjectUnauthorized{}
}

/*
TagObjectUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type TagObjectUnauthorized struct {
}

// IsSuccess returns true when this tag object unauthorized response has a 2xx status code
func (o *TagObjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this tag object unauthorized response has a 3xx status code
func (o *TagObjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tag object unauthorized response has a 4xx status code
func (o *TagObjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this tag object unauthorized response has a 5xx status code
func (o *TagObjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this tag object unauthorized response a status code equal to that given
func (o *TagObjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the tag object unauthorized response
func (o *TagObjectUnauthorized) Code() int {
	return 401
}

func (o *TagObjectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /catalog/{namespace}/{type}/{id}/tags][%d] tagObjectUnauthorized ", 401)
}

func (o *TagObjectUnauthorized) String() string {
	return fmt.Sprintf("[POST /catalog/{namespace}/{type}/{id}/tags][%d] tagObjectUnauthorized ", 401)
}

func (o *TagObjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
