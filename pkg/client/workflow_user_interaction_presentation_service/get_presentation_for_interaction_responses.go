// Code generated by go-swagger; DO NOT EDIT.

package workflow_user_interaction_presentation_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetPresentationForInteractionReader is a Reader for the GetPresentationForInteraction structure.
type GetPresentationForInteractionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPresentationForInteractionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPresentationForInteractionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPresentationForInteractionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPresentationForInteractionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /workflows/{workflowId}/executions/{executionId}/interaction/presentation] getPresentationForInteraction", response, response.Code())
	}
}

// NewGetPresentationForInteractionOK creates a GetPresentationForInteractionOK with default headers values
func NewGetPresentationForInteractionOK() *GetPresentationForInteractionOK {
	return &GetPresentationForInteractionOK{}
}

/*
GetPresentationForInteractionOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetPresentationForInteractionOK struct {
	Payload *models.Presentation
}

// IsSuccess returns true when this get presentation for interaction o k response has a 2xx status code
func (o *GetPresentationForInteractionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get presentation for interaction o k response has a 3xx status code
func (o *GetPresentationForInteractionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presentation for interaction o k response has a 4xx status code
func (o *GetPresentationForInteractionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get presentation for interaction o k response has a 5xx status code
func (o *GetPresentationForInteractionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get presentation for interaction o k response a status code equal to that given
func (o *GetPresentationForInteractionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get presentation for interaction o k response
func (o *GetPresentationForInteractionOK) Code() int {
	return 200
}

func (o *GetPresentationForInteractionOK) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/interaction/presentation][%d] getPresentationForInteractionOK  %+v", 200, o.Payload)
}

func (o *GetPresentationForInteractionOK) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/interaction/presentation][%d] getPresentationForInteractionOK  %+v", 200, o.Payload)
}

func (o *GetPresentationForInteractionOK) GetPayload() *models.Presentation {
	return o.Payload
}

func (o *GetPresentationForInteractionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Presentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPresentationForInteractionUnauthorized creates a GetPresentationForInteractionUnauthorized with default headers values
func NewGetPresentationForInteractionUnauthorized() *GetPresentationForInteractionUnauthorized {
	return &GetPresentationForInteractionUnauthorized{}
}

/*
GetPresentationForInteractionUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type GetPresentationForInteractionUnauthorized struct {
}

// IsSuccess returns true when this get presentation for interaction unauthorized response has a 2xx status code
func (o *GetPresentationForInteractionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presentation for interaction unauthorized response has a 3xx status code
func (o *GetPresentationForInteractionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presentation for interaction unauthorized response has a 4xx status code
func (o *GetPresentationForInteractionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presentation for interaction unauthorized response has a 5xx status code
func (o *GetPresentationForInteractionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get presentation for interaction unauthorized response a status code equal to that given
func (o *GetPresentationForInteractionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get presentation for interaction unauthorized response
func (o *GetPresentationForInteractionUnauthorized) Code() int {
	return 401
}

func (o *GetPresentationForInteractionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/interaction/presentation][%d] getPresentationForInteractionUnauthorized ", 401)
}

func (o *GetPresentationForInteractionUnauthorized) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/interaction/presentation][%d] getPresentationForInteractionUnauthorized ", 401)
}

func (o *GetPresentationForInteractionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPresentationForInteractionNotFound creates a GetPresentationForInteractionNotFound with default headers values
func NewGetPresentationForInteractionNotFound() *GetPresentationForInteractionNotFound {
	return &GetPresentationForInteractionNotFound{}
}

/*
GetPresentationForInteractionNotFound describes a response with status code 404, with default header values.

Cannot find a workflow with the specified ID or the user does not have 'read' access rights for that workflow
*/
type GetPresentationForInteractionNotFound struct {
}

// IsSuccess returns true when this get presentation for interaction not found response has a 2xx status code
func (o *GetPresentationForInteractionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get presentation for interaction not found response has a 3xx status code
func (o *GetPresentationForInteractionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get presentation for interaction not found response has a 4xx status code
func (o *GetPresentationForInteractionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get presentation for interaction not found response has a 5xx status code
func (o *GetPresentationForInteractionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get presentation for interaction not found response a status code equal to that given
func (o *GetPresentationForInteractionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get presentation for interaction not found response
func (o *GetPresentationForInteractionNotFound) Code() int {
	return 404
}

func (o *GetPresentationForInteractionNotFound) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/interaction/presentation][%d] getPresentationForInteractionNotFound ", 404)
}

func (o *GetPresentationForInteractionNotFound) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/interaction/presentation][%d] getPresentationForInteractionNotFound ", 404)
}

func (o *GetPresentationForInteractionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
