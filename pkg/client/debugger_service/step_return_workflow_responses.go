// Code generated by go-swagger; DO NOT EDIT.

package debugger_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// StepReturnWorkflowReader is a Reader for the StepReturnWorkflow structure.
type StepReturnWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StepReturnWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStepReturnWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStepReturnWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStepReturnWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /debugger/{executionId}/stepReturn] stepReturnWorkflow", response, response.Code())
	}
}

// NewStepReturnWorkflowOK creates a StepReturnWorkflowOK with default headers values
func NewStepReturnWorkflowOK() *StepReturnWorkflowOK {
	return &StepReturnWorkflowOK{}
}

/*
StepReturnWorkflowOK describes a response with status code 200, with default header values.

The request is successful
*/
type StepReturnWorkflowOK struct {
}

// IsSuccess returns true when this step return workflow o k response has a 2xx status code
func (o *StepReturnWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this step return workflow o k response has a 3xx status code
func (o *StepReturnWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this step return workflow o k response has a 4xx status code
func (o *StepReturnWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this step return workflow o k response has a 5xx status code
func (o *StepReturnWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this step return workflow o k response a status code equal to that given
func (o *StepReturnWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the step return workflow o k response
func (o *StepReturnWorkflowOK) Code() int {
	return 200
}

func (o *StepReturnWorkflowOK) Error() string {
	return fmt.Sprintf("[POST /debugger/{executionId}/stepReturn][%d] stepReturnWorkflowOK ", 200)
}

func (o *StepReturnWorkflowOK) String() string {
	return fmt.Sprintf("[POST /debugger/{executionId}/stepReturn][%d] stepReturnWorkflowOK ", 200)
}

func (o *StepReturnWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStepReturnWorkflowUnauthorized creates a StepReturnWorkflowUnauthorized with default headers values
func NewStepReturnWorkflowUnauthorized() *StepReturnWorkflowUnauthorized {
	return &StepReturnWorkflowUnauthorized{}
}

/*
StepReturnWorkflowUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type StepReturnWorkflowUnauthorized struct {
}

// IsSuccess returns true when this step return workflow unauthorized response has a 2xx status code
func (o *StepReturnWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this step return workflow unauthorized response has a 3xx status code
func (o *StepReturnWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this step return workflow unauthorized response has a 4xx status code
func (o *StepReturnWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this step return workflow unauthorized response has a 5xx status code
func (o *StepReturnWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this step return workflow unauthorized response a status code equal to that given
func (o *StepReturnWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the step return workflow unauthorized response
func (o *StepReturnWorkflowUnauthorized) Code() int {
	return 401
}

func (o *StepReturnWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[POST /debugger/{executionId}/stepReturn][%d] stepReturnWorkflowUnauthorized ", 401)
}

func (o *StepReturnWorkflowUnauthorized) String() string {
	return fmt.Sprintf("[POST /debugger/{executionId}/stepReturn][%d] stepReturnWorkflowUnauthorized ", 401)
}

func (o *StepReturnWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStepReturnWorkflowNotFound creates a StepReturnWorkflowNotFound with default headers values
func NewStepReturnWorkflowNotFound() *StepReturnWorkflowNotFound {
	return &StepReturnWorkflowNotFound{}
}

/*
StepReturnWorkflowNotFound describes a response with status code 404, with default header values.

Cannot find a workflow with the specified ID or the user does not have 'read' access rights for that workflow
*/
type StepReturnWorkflowNotFound struct {
}

// IsSuccess returns true when this step return workflow not found response has a 2xx status code
func (o *StepReturnWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this step return workflow not found response has a 3xx status code
func (o *StepReturnWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this step return workflow not found response has a 4xx status code
func (o *StepReturnWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this step return workflow not found response has a 5xx status code
func (o *StepReturnWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this step return workflow not found response a status code equal to that given
func (o *StepReturnWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the step return workflow not found response
func (o *StepReturnWorkflowNotFound) Code() int {
	return 404
}

func (o *StepReturnWorkflowNotFound) Error() string {
	return fmt.Sprintf("[POST /debugger/{executionId}/stepReturn][%d] stepReturnWorkflowNotFound ", 404)
}

func (o *StepReturnWorkflowNotFound) String() string {
	return fmt.Sprintf("[POST /debugger/{executionId}/stepReturn][%d] stepReturnWorkflowNotFound ", 404)
}

func (o *StepReturnWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
