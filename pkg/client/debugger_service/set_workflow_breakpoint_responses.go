// Code generated by go-swagger; DO NOT EDIT.

package debugger_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// SetWorkflowBreakpointReader is a Reader for the SetWorkflowBreakpoint structure.
type SetWorkflowBreakpointReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetWorkflowBreakpointReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetWorkflowBreakpointOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetWorkflowBreakpointUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetWorkflowBreakpointNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /debugger/{workflowId}/breakpoint] setWorkflowBreakpoint", response, response.Code())
	}
}

// NewSetWorkflowBreakpointOK creates a SetWorkflowBreakpointOK with default headers values
func NewSetWorkflowBreakpointOK() *SetWorkflowBreakpointOK {
	return &SetWorkflowBreakpointOK{}
}

/*
SetWorkflowBreakpointOK describes a response with status code 200, with default header values.

The request is successful
*/
type SetWorkflowBreakpointOK struct {
	Payload *models.Breakpoint
}

// IsSuccess returns true when this set workflow breakpoint o k response has a 2xx status code
func (o *SetWorkflowBreakpointOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set workflow breakpoint o k response has a 3xx status code
func (o *SetWorkflowBreakpointOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set workflow breakpoint o k response has a 4xx status code
func (o *SetWorkflowBreakpointOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set workflow breakpoint o k response has a 5xx status code
func (o *SetWorkflowBreakpointOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set workflow breakpoint o k response a status code equal to that given
func (o *SetWorkflowBreakpointOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set workflow breakpoint o k response
func (o *SetWorkflowBreakpointOK) Code() int {
	return 200
}

func (o *SetWorkflowBreakpointOK) Error() string {
	return fmt.Sprintf("[POST /debugger/{workflowId}/breakpoint][%d] setWorkflowBreakpointOK  %+v", 200, o.Payload)
}

func (o *SetWorkflowBreakpointOK) String() string {
	return fmt.Sprintf("[POST /debugger/{workflowId}/breakpoint][%d] setWorkflowBreakpointOK  %+v", 200, o.Payload)
}

func (o *SetWorkflowBreakpointOK) GetPayload() *models.Breakpoint {
	return o.Payload
}

func (o *SetWorkflowBreakpointOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Breakpoint)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetWorkflowBreakpointUnauthorized creates a SetWorkflowBreakpointUnauthorized with default headers values
func NewSetWorkflowBreakpointUnauthorized() *SetWorkflowBreakpointUnauthorized {
	return &SetWorkflowBreakpointUnauthorized{}
}

/*
SetWorkflowBreakpointUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type SetWorkflowBreakpointUnauthorized struct {
}

// IsSuccess returns true when this set workflow breakpoint unauthorized response has a 2xx status code
func (o *SetWorkflowBreakpointUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set workflow breakpoint unauthorized response has a 3xx status code
func (o *SetWorkflowBreakpointUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set workflow breakpoint unauthorized response has a 4xx status code
func (o *SetWorkflowBreakpointUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set workflow breakpoint unauthorized response has a 5xx status code
func (o *SetWorkflowBreakpointUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set workflow breakpoint unauthorized response a status code equal to that given
func (o *SetWorkflowBreakpointUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set workflow breakpoint unauthorized response
func (o *SetWorkflowBreakpointUnauthorized) Code() int {
	return 401
}

func (o *SetWorkflowBreakpointUnauthorized) Error() string {
	return fmt.Sprintf("[POST /debugger/{workflowId}/breakpoint][%d] setWorkflowBreakpointUnauthorized ", 401)
}

func (o *SetWorkflowBreakpointUnauthorized) String() string {
	return fmt.Sprintf("[POST /debugger/{workflowId}/breakpoint][%d] setWorkflowBreakpointUnauthorized ", 401)
}

func (o *SetWorkflowBreakpointUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetWorkflowBreakpointNotFound creates a SetWorkflowBreakpointNotFound with default headers values
func NewSetWorkflowBreakpointNotFound() *SetWorkflowBreakpointNotFound {
	return &SetWorkflowBreakpointNotFound{}
}

/*
SetWorkflowBreakpointNotFound describes a response with status code 404, with default header values.

Cannot find a workflow with the specified ID or the user does not have 'read' access rights for that workflow
*/
type SetWorkflowBreakpointNotFound struct {
}

// IsSuccess returns true when this set workflow breakpoint not found response has a 2xx status code
func (o *SetWorkflowBreakpointNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set workflow breakpoint not found response has a 3xx status code
func (o *SetWorkflowBreakpointNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set workflow breakpoint not found response has a 4xx status code
func (o *SetWorkflowBreakpointNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set workflow breakpoint not found response has a 5xx status code
func (o *SetWorkflowBreakpointNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set workflow breakpoint not found response a status code equal to that given
func (o *SetWorkflowBreakpointNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set workflow breakpoint not found response
func (o *SetWorkflowBreakpointNotFound) Code() int {
	return 404
}

func (o *SetWorkflowBreakpointNotFound) Error() string {
	return fmt.Sprintf("[POST /debugger/{workflowId}/breakpoint][%d] setWorkflowBreakpointNotFound ", 404)
}

func (o *SetWorkflowBreakpointNotFound) String() string {
	return fmt.Sprintf("[POST /debugger/{workflowId}/breakpoint][%d] setWorkflowBreakpointNotFound ", 404)
}

func (o *SetWorkflowBreakpointNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
