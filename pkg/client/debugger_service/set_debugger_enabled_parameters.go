// Code generated by go-swagger; DO NOT EDIT.

package debugger_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSetDebuggerEnabledParams creates a new SetDebuggerEnabledParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetDebuggerEnabledParams() *SetDebuggerEnabledParams {
	return &SetDebuggerEnabledParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetDebuggerEnabledParamsWithTimeout creates a new SetDebuggerEnabledParams object
// with the ability to set a timeout on a request.
func NewSetDebuggerEnabledParamsWithTimeout(timeout time.Duration) *SetDebuggerEnabledParams {
	return &SetDebuggerEnabledParams{
		timeout: timeout,
	}
}

// NewSetDebuggerEnabledParamsWithContext creates a new SetDebuggerEnabledParams object
// with the ability to set a context for a request.
func NewSetDebuggerEnabledParamsWithContext(ctx context.Context) *SetDebuggerEnabledParams {
	return &SetDebuggerEnabledParams{
		Context: ctx,
	}
}

// NewSetDebuggerEnabledParamsWithHTTPClient creates a new SetDebuggerEnabledParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetDebuggerEnabledParamsWithHTTPClient(client *http.Client) *SetDebuggerEnabledParams {
	return &SetDebuggerEnabledParams{
		HTTPClient: client,
	}
}

/*
SetDebuggerEnabledParams contains all the parameters to send to the API endpoint

	for the set debugger enabled operation.

	Typically these are written to a http.Request.
*/
type SetDebuggerEnabledParams struct {

	// Value.
	Value bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set debugger enabled params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetDebuggerEnabledParams) WithDefaults() *SetDebuggerEnabledParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set debugger enabled params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetDebuggerEnabledParams) SetDefaults() {
	var (
		valueDefault = bool(false)
	)

	val := SetDebuggerEnabledParams{
		Value: valueDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the set debugger enabled params
func (o *SetDebuggerEnabledParams) WithTimeout(timeout time.Duration) *SetDebuggerEnabledParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set debugger enabled params
func (o *SetDebuggerEnabledParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set debugger enabled params
func (o *SetDebuggerEnabledParams) WithContext(ctx context.Context) *SetDebuggerEnabledParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set debugger enabled params
func (o *SetDebuggerEnabledParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set debugger enabled params
func (o *SetDebuggerEnabledParams) WithHTTPClient(client *http.Client) *SetDebuggerEnabledParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set debugger enabled params
func (o *SetDebuggerEnabledParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithValue adds the value to the set debugger enabled params
func (o *SetDebuggerEnabledParams) WithValue(value bool) *SetDebuggerEnabledParams {
	o.SetValue(value)
	return o
}

// SetValue adds the value to the set debugger enabled params
func (o *SetDebuggerEnabledParams) SetValue(value bool) {
	o.Value = value
}

// WriteToRequest writes these params to a swagger request
func (o *SetDebuggerEnabledParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param value
	qrValue := o.Value
	qValue := swag.FormatBool(qrValue)
	if qValue != "" {

		if err := r.SetQueryParam("value", qValue); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
