// Code generated by go-swagger; DO NOT EDIT.

package workflow_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetWorkflowReader is a Reader for the GetWorkflow structure.
type GetWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /workflows/{id}] getWorkflow", response, response.Code())
	}
}

// NewGetWorkflowOK creates a GetWorkflowOK with default headers values
func NewGetWorkflowOK() *GetWorkflowOK {
	return &GetWorkflowOK{}
}

/*
GetWorkflowOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetWorkflowOK struct {
	Payload *models.Workflow
}

// IsSuccess returns true when this get workflow o k response has a 2xx status code
func (o *GetWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflow o k response has a 3xx status code
func (o *GetWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow o k response has a 4xx status code
func (o *GetWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow o k response has a 5xx status code
func (o *GetWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow o k response a status code equal to that given
func (o *GetWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflow o k response
func (o *GetWorkflowOK) Code() int {
	return 200
}

func (o *GetWorkflowOK) Error() string {
	return fmt.Sprintf("[GET /workflows/{id}][%d] getWorkflowOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowOK) String() string {
	return fmt.Sprintf("[GET /workflows/{id}][%d] getWorkflowOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowOK) GetPayload() *models.Workflow {
	return o.Payload
}

func (o *GetWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Workflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowUnauthorized creates a GetWorkflowUnauthorized with default headers values
func NewGetWorkflowUnauthorized() *GetWorkflowUnauthorized {
	return &GetWorkflowUnauthorized{}
}

/*
GetWorkflowUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type GetWorkflowUnauthorized struct {
}

// IsSuccess returns true when this get workflow unauthorized response has a 2xx status code
func (o *GetWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow unauthorized response has a 3xx status code
func (o *GetWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow unauthorized response has a 4xx status code
func (o *GetWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow unauthorized response has a 5xx status code
func (o *GetWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow unauthorized response a status code equal to that given
func (o *GetWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workflow unauthorized response
func (o *GetWorkflowUnauthorized) Code() int {
	return 401
}

func (o *GetWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflows/{id}][%d] getWorkflowUnauthorized ", 401)
}

func (o *GetWorkflowUnauthorized) String() string {
	return fmt.Sprintf("[GET /workflows/{id}][%d] getWorkflowUnauthorized ", 401)
}

func (o *GetWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowNotFound creates a GetWorkflowNotFound with default headers values
func NewGetWorkflowNotFound() *GetWorkflowNotFound {
	return &GetWorkflowNotFound{}
}

/*
GetWorkflowNotFound describes a response with status code 404, with default header values.

Can not find a workflow with the specified id or the user does not have 'read' access rights for that workflow
*/
type GetWorkflowNotFound struct {
}

// IsSuccess returns true when this get workflow not found response has a 2xx status code
func (o *GetWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow not found response has a 3xx status code
func (o *GetWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow not found response has a 4xx status code
func (o *GetWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow not found response has a 5xx status code
func (o *GetWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow not found response a status code equal to that given
func (o *GetWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflow not found response
func (o *GetWorkflowNotFound) Code() int {
	return 404
}

func (o *GetWorkflowNotFound) Error() string {
	return fmt.Sprintf("[GET /workflows/{id}][%d] getWorkflowNotFound ", 404)
}

func (o *GetWorkflowNotFound) String() string {
	return fmt.Sprintf("[GET /workflows/{id}][%d] getWorkflowNotFound ", 404)
}

func (o *GetWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
