// Code generated by go-swagger; DO NOT EDIT.

package workflow_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ImportWorkflowReader is a Reader for the ImportWorkflow structure.
type ImportWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImportWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewImportWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /workflows] importWorkflow", response, response.Code())
	}
}

// NewImportWorkflowOK creates a ImportWorkflowOK with default headers values
func NewImportWorkflowOK() *ImportWorkflowOK {
	return &ImportWorkflowOK{}
}

/*
ImportWorkflowOK describes a response with status code 200, with default header values.

The request is successful
*/
type ImportWorkflowOK struct {
}

// IsSuccess returns true when this import workflow o k response has a 2xx status code
func (o *ImportWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import workflow o k response has a 3xx status code
func (o *ImportWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import workflow o k response has a 4xx status code
func (o *ImportWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this import workflow o k response has a 5xx status code
func (o *ImportWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this import workflow o k response a status code equal to that given
func (o *ImportWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the import workflow o k response
func (o *ImportWorkflowOK) Code() int {
	return 200
}

func (o *ImportWorkflowOK) Error() string {
	return fmt.Sprintf("[POST /workflows][%d] importWorkflowOK ", 200)
}

func (o *ImportWorkflowOK) String() string {
	return fmt.Sprintf("[POST /workflows][%d] importWorkflowOK ", 200)
}

func (o *ImportWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportWorkflowUnauthorized creates a ImportWorkflowUnauthorized with default headers values
func NewImportWorkflowUnauthorized() *ImportWorkflowUnauthorized {
	return &ImportWorkflowUnauthorized{}
}

/*
ImportWorkflowUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type ImportWorkflowUnauthorized struct {
}

// IsSuccess returns true when this import workflow unauthorized response has a 2xx status code
func (o *ImportWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import workflow unauthorized response has a 3xx status code
func (o *ImportWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import workflow unauthorized response has a 4xx status code
func (o *ImportWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import workflow unauthorized response has a 5xx status code
func (o *ImportWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import workflow unauthorized response a status code equal to that given
func (o *ImportWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import workflow unauthorized response
func (o *ImportWorkflowUnauthorized) Code() int {
	return 401
}

func (o *ImportWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[POST /workflows][%d] importWorkflowUnauthorized ", 401)
}

func (o *ImportWorkflowUnauthorized) String() string {
	return fmt.Sprintf("[POST /workflows][%d] importWorkflowUnauthorized ", 401)
}

func (o *ImportWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportWorkflowNotFound creates a ImportWorkflowNotFound with default headers values
func NewImportWorkflowNotFound() *ImportWorkflowNotFound {
	return &ImportWorkflowNotFound{}
}

/*
ImportWorkflowNotFound describes a response with status code 404, with default header values.

Cannot find a category with the specified ID.
*/
type ImportWorkflowNotFound struct {
}

// IsSuccess returns true when this import workflow not found response has a 2xx status code
func (o *ImportWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import workflow not found response has a 3xx status code
func (o *ImportWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import workflow not found response has a 4xx status code
func (o *ImportWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this import workflow not found response has a 5xx status code
func (o *ImportWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this import workflow not found response a status code equal to that given
func (o *ImportWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the import workflow not found response
func (o *ImportWorkflowNotFound) Code() int {
	return 404
}

func (o *ImportWorkflowNotFound) Error() string {
	return fmt.Sprintf("[POST /workflows][%d] importWorkflowNotFound ", 404)
}

func (o *ImportWorkflowNotFound) String() string {
	return fmt.Sprintf("[POST /workflows][%d] importWorkflowNotFound ", 404)
}

func (o *ImportWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
