// Code generated by go-swagger; DO NOT EDIT.

package configuration_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteConfigurationReader is a Reader for the DeleteConfiguration structure.
type DeleteConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteConfigurationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /configurations/{id}] deleteConfiguration", response, response.Code())
	}
}

// NewDeleteConfigurationNoContent creates a DeleteConfigurationNoContent with default headers values
func NewDeleteConfigurationNoContent() *DeleteConfigurationNoContent {
	return &DeleteConfigurationNoContent{}
}

/*
DeleteConfigurationNoContent describes a response with status code 204, with default header values.

No content
*/
type DeleteConfigurationNoContent struct {
}

// IsSuccess returns true when this delete configuration no content response has a 2xx status code
func (o *DeleteConfigurationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete configuration no content response has a 3xx status code
func (o *DeleteConfigurationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete configuration no content response has a 4xx status code
func (o *DeleteConfigurationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete configuration no content response has a 5xx status code
func (o *DeleteConfigurationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete configuration no content response a status code equal to that given
func (o *DeleteConfigurationNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete configuration no content response
func (o *DeleteConfigurationNoContent) Code() int {
	return 204
}

func (o *DeleteConfigurationNoContent) Error() string {
	return fmt.Sprintf("[DELETE /configurations/{id}][%d] deleteConfigurationNoContent ", 204)
}

func (o *DeleteConfigurationNoContent) String() string {
	return fmt.Sprintf("[DELETE /configurations/{id}][%d] deleteConfigurationNoContent ", 204)
}

func (o *DeleteConfigurationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConfigurationUnauthorized creates a DeleteConfigurationUnauthorized with default headers values
func NewDeleteConfigurationUnauthorized() *DeleteConfigurationUnauthorized {
	return &DeleteConfigurationUnauthorized{}
}

/*
DeleteConfigurationUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type DeleteConfigurationUnauthorized struct {
}

// IsSuccess returns true when this delete configuration unauthorized response has a 2xx status code
func (o *DeleteConfigurationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete configuration unauthorized response has a 3xx status code
func (o *DeleteConfigurationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete configuration unauthorized response has a 4xx status code
func (o *DeleteConfigurationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete configuration unauthorized response has a 5xx status code
func (o *DeleteConfigurationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete configuration unauthorized response a status code equal to that given
func (o *DeleteConfigurationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete configuration unauthorized response
func (o *DeleteConfigurationUnauthorized) Code() int {
	return 401
}

func (o *DeleteConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /configurations/{id}][%d] deleteConfigurationUnauthorized ", 401)
}

func (o *DeleteConfigurationUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /configurations/{id}][%d] deleteConfigurationUnauthorized ", 401)
}

func (o *DeleteConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConfigurationNotFound creates a DeleteConfigurationNotFound with default headers values
func NewDeleteConfigurationNotFound() *DeleteConfigurationNotFound {
	return &DeleteConfigurationNotFound{}
}

/*
DeleteConfigurationNotFound describes a response with status code 404, with default header values.

Cannot find configuration with the specified name
*/
type DeleteConfigurationNotFound struct {
}

// IsSuccess returns true when this delete configuration not found response has a 2xx status code
func (o *DeleteConfigurationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete configuration not found response has a 3xx status code
func (o *DeleteConfigurationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete configuration not found response has a 4xx status code
func (o *DeleteConfigurationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete configuration not found response has a 5xx status code
func (o *DeleteConfigurationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete configuration not found response a status code equal to that given
func (o *DeleteConfigurationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete configuration not found response
func (o *DeleteConfigurationNotFound) Code() int {
	return 404
}

func (o *DeleteConfigurationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /configurations/{id}][%d] deleteConfigurationNotFound ", 404)
}

func (o *DeleteConfigurationNotFound) String() string {
	return fmt.Sprintf("[DELETE /configurations/{id}][%d] deleteConfigurationNotFound ", 404)
}

func (o *DeleteConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
