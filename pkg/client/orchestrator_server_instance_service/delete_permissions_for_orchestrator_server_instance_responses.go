// Code generated by go-swagger; DO NOT EDIT.

package orchestrator_server_instance_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeletePermissionsForOrchestratorServerInstanceReader is a Reader for the DeletePermissionsForOrchestratorServerInstance structure.
type DeletePermissionsForOrchestratorServerInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePermissionsForOrchestratorServerInstanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePermissionsForOrchestratorServerInstanceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePermissionsForOrchestratorServerInstanceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /server/permissions] deletePermissionsForOrchestratorServerInstance", response, response.Code())
	}
}

// NewDeletePermissionsForOrchestratorServerInstanceNoContent creates a DeletePermissionsForOrchestratorServerInstanceNoContent with default headers values
func NewDeletePermissionsForOrchestratorServerInstanceNoContent() *DeletePermissionsForOrchestratorServerInstanceNoContent {
	return &DeletePermissionsForOrchestratorServerInstanceNoContent{}
}

/*
DeletePermissionsForOrchestratorServerInstanceNoContent describes a response with status code 204, with default header values.

No content
*/
type DeletePermissionsForOrchestratorServerInstanceNoContent struct {
}

// IsSuccess returns true when this delete permissions for orchestrator server instance no content response has a 2xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete permissions for orchestrator server instance no content response has a 3xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete permissions for orchestrator server instance no content response has a 4xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete permissions for orchestrator server instance no content response has a 5xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete permissions for orchestrator server instance no content response a status code equal to that given
func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete permissions for orchestrator server instance no content response
func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) Code() int {
	return 204
}

func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /server/permissions][%d] deletePermissionsForOrchestratorServerInstanceNoContent ", 204)
}

func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) String() string {
	return fmt.Sprintf("[DELETE /server/permissions][%d] deletePermissionsForOrchestratorServerInstanceNoContent ", 204)
}

func (o *DeletePermissionsForOrchestratorServerInstanceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePermissionsForOrchestratorServerInstanceUnauthorized creates a DeletePermissionsForOrchestratorServerInstanceUnauthorized with default headers values
func NewDeletePermissionsForOrchestratorServerInstanceUnauthorized() *DeletePermissionsForOrchestratorServerInstanceUnauthorized {
	return &DeletePermissionsForOrchestratorServerInstanceUnauthorized{}
}

/*
DeletePermissionsForOrchestratorServerInstanceUnauthorized describes a response with status code 401, with default header values.

The user is not authorized.
*/
type DeletePermissionsForOrchestratorServerInstanceUnauthorized struct {
}

// IsSuccess returns true when this delete permissions for orchestrator server instance unauthorized response has a 2xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete permissions for orchestrator server instance unauthorized response has a 3xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete permissions for orchestrator server instance unauthorized response has a 4xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete permissions for orchestrator server instance unauthorized response has a 5xx status code
func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete permissions for orchestrator server instance unauthorized response a status code equal to that given
func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete permissions for orchestrator server instance unauthorized response
func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) Code() int {
	return 401
}

func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /server/permissions][%d] deletePermissionsForOrchestratorServerInstanceUnauthorized ", 401)
}

func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /server/permissions][%d] deletePermissionsForOrchestratorServerInstanceUnauthorized ", 401)
}

func (o *DeletePermissionsForOrchestratorServerInstanceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
