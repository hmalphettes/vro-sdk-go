// Code generated by go-swagger; DO NOT EDIT.

package orchestrator_server_instance_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// GetAuthenticationReader is a Reader for the GetAuthentication structure.
type GetAuthenticationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthenticationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthenticationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAuthenticationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /server/authentication] getAuthentication", response, response.Code())
	}
}

// NewGetAuthenticationOK creates a GetAuthenticationOK with default headers values
func NewGetAuthenticationOK() *GetAuthenticationOK {
	return &GetAuthenticationOK{}
}

/*
GetAuthenticationOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetAuthenticationOK struct {
	Payload *models.ServerAuthentication
}

// IsSuccess returns true when this get authentication o k response has a 2xx status code
func (o *GetAuthenticationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authentication o k response has a 3xx status code
func (o *GetAuthenticationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authentication o k response has a 4xx status code
func (o *GetAuthenticationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authentication o k response has a 5xx status code
func (o *GetAuthenticationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authentication o k response a status code equal to that given
func (o *GetAuthenticationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get authentication o k response
func (o *GetAuthenticationOK) Code() int {
	return 200
}

func (o *GetAuthenticationOK) Error() string {
	return fmt.Sprintf("[GET /server/authentication][%d] getAuthenticationOK  %+v", 200, o.Payload)
}

func (o *GetAuthenticationOK) String() string {
	return fmt.Sprintf("[GET /server/authentication][%d] getAuthenticationOK  %+v", 200, o.Payload)
}

func (o *GetAuthenticationOK) GetPayload() *models.ServerAuthentication {
	return o.Payload
}

func (o *GetAuthenticationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerAuthentication)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthenticationUnauthorized creates a GetAuthenticationUnauthorized with default headers values
func NewGetAuthenticationUnauthorized() *GetAuthenticationUnauthorized {
	return &GetAuthenticationUnauthorized{}
}

/*
GetAuthenticationUnauthorized describes a response with status code 401, with default header values.

The user is not authorized.
*/
type GetAuthenticationUnauthorized struct {
}

// IsSuccess returns true when this get authentication unauthorized response has a 2xx status code
func (o *GetAuthenticationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authentication unauthorized response has a 3xx status code
func (o *GetAuthenticationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authentication unauthorized response has a 4xx status code
func (o *GetAuthenticationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authentication unauthorized response has a 5xx status code
func (o *GetAuthenticationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get authentication unauthorized response a status code equal to that given
func (o *GetAuthenticationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get authentication unauthorized response
func (o *GetAuthenticationUnauthorized) Code() int {
	return 401
}

func (o *GetAuthenticationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /server/authentication][%d] getAuthenticationUnauthorized ", 401)
}

func (o *GetAuthenticationUnauthorized) String() string {
	return fmt.Sprintf("[GET /server/authentication][%d] getAuthenticationUnauthorized ", 401)
}

func (o *GetAuthenticationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
