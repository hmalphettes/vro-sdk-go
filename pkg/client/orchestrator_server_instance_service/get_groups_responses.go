// Code generated by go-swagger; DO NOT EDIT.

package orchestrator_server_instance_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetGroupsReader is a Reader for the GetGroups structure.
type GetGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /server/groups] getGroups", response, response.Code())
	}
}

// NewGetGroupsOK creates a GetGroupsOK with default headers values
func NewGetGroupsOK() *GetGroupsOK {
	return &GetGroupsOK{}
}

/*
GetGroupsOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetGroupsOK struct {
	Payload *models.UserGroups
}

// IsSuccess returns true when this get groups o k response has a 2xx status code
func (o *GetGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get groups o k response has a 3xx status code
func (o *GetGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get groups o k response has a 4xx status code
func (o *GetGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get groups o k response has a 5xx status code
func (o *GetGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get groups o k response a status code equal to that given
func (o *GetGroupsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get groups o k response
func (o *GetGroupsOK) Code() int {
	return 200
}

func (o *GetGroupsOK) Error() string {
	return fmt.Sprintf("[GET /server/groups][%d] getGroupsOK  %+v", 200, o.Payload)
}

func (o *GetGroupsOK) String() string {
	return fmt.Sprintf("[GET /server/groups][%d] getGroupsOK  %+v", 200, o.Payload)
}

func (o *GetGroupsOK) GetPayload() *models.UserGroups {
	return o.Payload
}

func (o *GetGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroups)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsUnauthorized creates a GetGroupsUnauthorized with default headers values
func NewGetGroupsUnauthorized() *GetGroupsUnauthorized {
	return &GetGroupsUnauthorized{}
}

/*
GetGroupsUnauthorized describes a response with status code 401, with default header values.

The user is not authorized.
*/
type GetGroupsUnauthorized struct {
}

// IsSuccess returns true when this get groups unauthorized response has a 2xx status code
func (o *GetGroupsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get groups unauthorized response has a 3xx status code
func (o *GetGroupsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get groups unauthorized response has a 4xx status code
func (o *GetGroupsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get groups unauthorized response has a 5xx status code
func (o *GetGroupsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get groups unauthorized response a status code equal to that given
func (o *GetGroupsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get groups unauthorized response
func (o *GetGroupsUnauthorized) Code() int {
	return 401
}

func (o *GetGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /server/groups][%d] getGroupsUnauthorized ", 401)
}

func (o *GetGroupsUnauthorized) String() string {
	return fmt.Sprintf("[GET /server/groups][%d] getGroupsUnauthorized ", 401)
}

func (o *GetGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
