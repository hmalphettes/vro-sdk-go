// Code generated by go-swagger; DO NOT EDIT.

package actions_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ImportActionReader is a Reader for the ImportAction structure.
type ImportActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewImportActionAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewImportActionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /actions] importAction", response, response.Code())
	}
}

// NewImportActionAccepted creates a ImportActionAccepted with default headers values
func NewImportActionAccepted() *ImportActionAccepted {
	return &ImportActionAccepted{}
}

/*
ImportActionAccepted describes a response with status code 202, with default header values.

Action successfully imported
*/
type ImportActionAccepted struct {
}

// IsSuccess returns true when this import action accepted response has a 2xx status code
func (o *ImportActionAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import action accepted response has a 3xx status code
func (o *ImportActionAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import action accepted response has a 4xx status code
func (o *ImportActionAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this import action accepted response has a 5xx status code
func (o *ImportActionAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this import action accepted response a status code equal to that given
func (o *ImportActionAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the import action accepted response
func (o *ImportActionAccepted) Code() int {
	return 202
}

func (o *ImportActionAccepted) Error() string {
	return fmt.Sprintf("[POST /actions][%d] importActionAccepted ", 202)
}

func (o *ImportActionAccepted) String() string {
	return fmt.Sprintf("[POST /actions][%d] importActionAccepted ", 202)
}

func (o *ImportActionAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportActionUnauthorized creates a ImportActionUnauthorized with default headers values
func NewImportActionUnauthorized() *ImportActionUnauthorized {
	return &ImportActionUnauthorized{}
}

/*
ImportActionUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type ImportActionUnauthorized struct {
}

// IsSuccess returns true when this import action unauthorized response has a 2xx status code
func (o *ImportActionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import action unauthorized response has a 3xx status code
func (o *ImportActionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import action unauthorized response has a 4xx status code
func (o *ImportActionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import action unauthorized response has a 5xx status code
func (o *ImportActionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import action unauthorized response a status code equal to that given
func (o *ImportActionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import action unauthorized response
func (o *ImportActionUnauthorized) Code() int {
	return 401
}

func (o *ImportActionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /actions][%d] importActionUnauthorized ", 401)
}

func (o *ImportActionUnauthorized) String() string {
	return fmt.Sprintf("[POST /actions][%d] importActionUnauthorized ", 401)
}

func (o *ImportActionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportActionNotFound creates a ImportActionNotFound with default headers values
func NewImportActionNotFound() *ImportActionNotFound {
	return &ImportActionNotFound{}
}

/*
ImportActionNotFound describes a response with status code 404, with default header values.

Can not find an action category with the specified name
*/
type ImportActionNotFound struct {
}

// IsSuccess returns true when this import action not found response has a 2xx status code
func (o *ImportActionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import action not found response has a 3xx status code
func (o *ImportActionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import action not found response has a 4xx status code
func (o *ImportActionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this import action not found response has a 5xx status code
func (o *ImportActionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this import action not found response a status code equal to that given
func (o *ImportActionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the import action not found response
func (o *ImportActionNotFound) Code() int {
	return 404
}

func (o *ImportActionNotFound) Error() string {
	return fmt.Sprintf("[POST /actions][%d] importActionNotFound ", 404)
}

func (o *ImportActionNotFound) String() string {
	return fmt.Sprintf("[POST /actions][%d] importActionNotFound ", 404)
}

func (o *ImportActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
