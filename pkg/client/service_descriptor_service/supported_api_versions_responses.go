// Code generated by go-swagger; DO NOT EDIT.

package service_descriptor_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// SupportedAPIVersionsReader is a Reader for the SupportedAPIVersions structure.
type SupportedAPIVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SupportedAPIVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSupportedAPIVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSupportedAPIVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /versions] supportedApiVersions", response, response.Code())
	}
}

// NewSupportedAPIVersionsOK creates a SupportedAPIVersionsOK with default headers values
func NewSupportedAPIVersionsOK() *SupportedAPIVersionsOK {
	return &SupportedAPIVersionsOK{}
}

/*
SupportedAPIVersionsOK describes a response with status code 200, with default header values.

The request is successful.
*/
type SupportedAPIVersionsOK struct {
	Payload *models.SupportedVersions
}

// IsSuccess returns true when this supported Api versions o k response has a 2xx status code
func (o *SupportedAPIVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this supported Api versions o k response has a 3xx status code
func (o *SupportedAPIVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this supported Api versions o k response has a 4xx status code
func (o *SupportedAPIVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this supported Api versions o k response has a 5xx status code
func (o *SupportedAPIVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this supported Api versions o k response a status code equal to that given
func (o *SupportedAPIVersionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the supported Api versions o k response
func (o *SupportedAPIVersionsOK) Code() int {
	return 200
}

func (o *SupportedAPIVersionsOK) Error() string {
	return fmt.Sprintf("[GET /versions][%d] supportedApiVersionsOK  %+v", 200, o.Payload)
}

func (o *SupportedAPIVersionsOK) String() string {
	return fmt.Sprintf("[GET /versions][%d] supportedApiVersionsOK  %+v", 200, o.Payload)
}

func (o *SupportedAPIVersionsOK) GetPayload() *models.SupportedVersions {
	return o.Payload
}

func (o *SupportedAPIVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupportedVersions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportedAPIVersionsUnauthorized creates a SupportedAPIVersionsUnauthorized with default headers values
func NewSupportedAPIVersionsUnauthorized() *SupportedAPIVersionsUnauthorized {
	return &SupportedAPIVersionsUnauthorized{}
}

/*
SupportedAPIVersionsUnauthorized describes a response with status code 401, with default header values.

User is not authorized.
*/
type SupportedAPIVersionsUnauthorized struct {
}

// IsSuccess returns true when this supported Api versions unauthorized response has a 2xx status code
func (o *SupportedAPIVersionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this supported Api versions unauthorized response has a 3xx status code
func (o *SupportedAPIVersionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this supported Api versions unauthorized response has a 4xx status code
func (o *SupportedAPIVersionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this supported Api versions unauthorized response has a 5xx status code
func (o *SupportedAPIVersionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this supported Api versions unauthorized response a status code equal to that given
func (o *SupportedAPIVersionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the supported Api versions unauthorized response
func (o *SupportedAPIVersionsUnauthorized) Code() int {
	return 401
}

func (o *SupportedAPIVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /versions][%d] supportedApiVersionsUnauthorized ", 401)
}

func (o *SupportedAPIVersionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /versions][%d] supportedApiVersionsUnauthorized ", 401)
}

func (o *SupportedAPIVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
