// Code generated by go-swagger; DO NOT EDIT.

package service_descriptor_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// HealthStatusReader is a Reader for the HealthStatus structure.
type HealthStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HealthStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHealthStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHealthStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /healthstatus] healthStatus", response, response.Code())
	}
}

// NewHealthStatusOK creates a HealthStatusOK with default headers values
func NewHealthStatusOK() *HealthStatusOK {
	return &HealthStatusOK{}
}

/*
HealthStatusOK describes a response with status code 200, with default header values.

The request is successful.
*/
type HealthStatusOK struct {
	Payload *models.NodeStatus
}

// IsSuccess returns true when this health status o k response has a 2xx status code
func (o *HealthStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this health status o k response has a 3xx status code
func (o *HealthStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this health status o k response has a 4xx status code
func (o *HealthStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this health status o k response has a 5xx status code
func (o *HealthStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this health status o k response a status code equal to that given
func (o *HealthStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the health status o k response
func (o *HealthStatusOK) Code() int {
	return 200
}

func (o *HealthStatusOK) Error() string {
	return fmt.Sprintf("[GET /healthstatus][%d] healthStatusOK  %+v", 200, o.Payload)
}

func (o *HealthStatusOK) String() string {
	return fmt.Sprintf("[GET /healthstatus][%d] healthStatusOK  %+v", 200, o.Payload)
}

func (o *HealthStatusOK) GetPayload() *models.NodeStatus {
	return o.Payload
}

func (o *HealthStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodeStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHealthStatusUnauthorized creates a HealthStatusUnauthorized with default headers values
func NewHealthStatusUnauthorized() *HealthStatusUnauthorized {
	return &HealthStatusUnauthorized{}
}

/*
HealthStatusUnauthorized describes a response with status code 401, with default header values.

User is not authorized.
*/
type HealthStatusUnauthorized struct {
}

// IsSuccess returns true when this health status unauthorized response has a 2xx status code
func (o *HealthStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this health status unauthorized response has a 3xx status code
func (o *HealthStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this health status unauthorized response has a 4xx status code
func (o *HealthStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this health status unauthorized response has a 5xx status code
func (o *HealthStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this health status unauthorized response a status code equal to that given
func (o *HealthStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the health status unauthorized response
func (o *HealthStatusUnauthorized) Code() int {
	return 401
}

func (o *HealthStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /healthstatus][%d] healthStatusUnauthorized ", 401)
}

func (o *HealthStatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /healthstatus][%d] healthStatusUnauthorized ", 401)
}

func (o *HealthStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
