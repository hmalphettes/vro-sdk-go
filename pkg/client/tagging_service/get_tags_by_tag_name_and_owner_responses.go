// Code generated by go-swagger; DO NOT EDIT.

package tagging_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// GetTagsByTagNameAndOwnerReader is a Reader for the GetTagsByTagNameAndOwner structure.
type GetTagsByTagNameAndOwnerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsByTagNameAndOwnerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsByTagNameAndOwnerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTagsByTagNameAndOwnerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /tags/{owner}/{tagName}] getTagsByTagNameAndOwner", response, response.Code())
	}
}

// NewGetTagsByTagNameAndOwnerOK creates a GetTagsByTagNameAndOwnerOK with default headers values
func NewGetTagsByTagNameAndOwnerOK() *GetTagsByTagNameAndOwnerOK {
	return &GetTagsByTagNameAndOwnerOK{}
}

/*
GetTagsByTagNameAndOwnerOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetTagsByTagNameAndOwnerOK struct {
	Payload *models.TagInstances
}

// IsSuccess returns true when this get tags by tag name and owner o k response has a 2xx status code
func (o *GetTagsByTagNameAndOwnerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags by tag name and owner o k response has a 3xx status code
func (o *GetTagsByTagNameAndOwnerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by tag name and owner o k response has a 4xx status code
func (o *GetTagsByTagNameAndOwnerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags by tag name and owner o k response has a 5xx status code
func (o *GetTagsByTagNameAndOwnerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by tag name and owner o k response a status code equal to that given
func (o *GetTagsByTagNameAndOwnerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tags by tag name and owner o k response
func (o *GetTagsByTagNameAndOwnerOK) Code() int {
	return 200
}

func (o *GetTagsByTagNameAndOwnerOK) Error() string {
	return fmt.Sprintf("[GET /tags/{owner}/{tagName}][%d] getTagsByTagNameAndOwnerOK  %+v", 200, o.Payload)
}

func (o *GetTagsByTagNameAndOwnerOK) String() string {
	return fmt.Sprintf("[GET /tags/{owner}/{tagName}][%d] getTagsByTagNameAndOwnerOK  %+v", 200, o.Payload)
}

func (o *GetTagsByTagNameAndOwnerOK) GetPayload() *models.TagInstances {
	return o.Payload
}

func (o *GetTagsByTagNameAndOwnerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TagInstances)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsByTagNameAndOwnerUnauthorized creates a GetTagsByTagNameAndOwnerUnauthorized with default headers values
func NewGetTagsByTagNameAndOwnerUnauthorized() *GetTagsByTagNameAndOwnerUnauthorized {
	return &GetTagsByTagNameAndOwnerUnauthorized{}
}

/*
GetTagsByTagNameAndOwnerUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type GetTagsByTagNameAndOwnerUnauthorized struct {
}

// IsSuccess returns true when this get tags by tag name and owner unauthorized response has a 2xx status code
func (o *GetTagsByTagNameAndOwnerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by tag name and owner unauthorized response has a 3xx status code
func (o *GetTagsByTagNameAndOwnerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by tag name and owner unauthorized response has a 4xx status code
func (o *GetTagsByTagNameAndOwnerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags by tag name and owner unauthorized response has a 5xx status code
func (o *GetTagsByTagNameAndOwnerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by tag name and owner unauthorized response a status code equal to that given
func (o *GetTagsByTagNameAndOwnerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get tags by tag name and owner unauthorized response
func (o *GetTagsByTagNameAndOwnerUnauthorized) Code() int {
	return 401
}

func (o *GetTagsByTagNameAndOwnerUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tags/{owner}/{tagName}][%d] getTagsByTagNameAndOwnerUnauthorized ", 401)
}

func (o *GetTagsByTagNameAndOwnerUnauthorized) String() string {
	return fmt.Sprintf("[GET /tags/{owner}/{tagName}][%d] getTagsByTagNameAndOwnerUnauthorized ", 401)
}

func (o *GetTagsByTagNameAndOwnerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
