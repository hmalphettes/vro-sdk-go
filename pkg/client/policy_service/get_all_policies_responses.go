// Code generated by go-swagger; DO NOT EDIT.

package policy_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// GetAllPoliciesReader is a Reader for the GetAllPolicies structure.
type GetAllPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /policies] getAllPolicies", response, response.Code())
	}
}

// NewGetAllPoliciesOK creates a GetAllPoliciesOK with default headers values
func NewGetAllPoliciesOK() *GetAllPoliciesOK {
	return &GetAllPoliciesOK{}
}

/*
GetAllPoliciesOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetAllPoliciesOK struct {
	Payload *models.PolicyList
}

// IsSuccess returns true when this get all policies o k response has a 2xx status code
func (o *GetAllPoliciesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all policies o k response has a 3xx status code
func (o *GetAllPoliciesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policies o k response has a 4xx status code
func (o *GetAllPoliciesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all policies o k response has a 5xx status code
func (o *GetAllPoliciesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policies o k response a status code equal to that given
func (o *GetAllPoliciesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all policies o k response
func (o *GetAllPoliciesOK) Code() int {
	return 200
}

func (o *GetAllPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getAllPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetAllPoliciesOK) String() string {
	return fmt.Sprintf("[GET /policies][%d] getAllPoliciesOK  %+v", 200, o.Payload)
}

func (o *GetAllPoliciesOK) GetPayload() *models.PolicyList {
	return o.Payload
}

func (o *GetAllPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PolicyList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPoliciesUnauthorized creates a GetAllPoliciesUnauthorized with default headers values
func NewGetAllPoliciesUnauthorized() *GetAllPoliciesUnauthorized {
	return &GetAllPoliciesUnauthorized{}
}

/*
GetAllPoliciesUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type GetAllPoliciesUnauthorized struct {
}

// IsSuccess returns true when this get all policies unauthorized response has a 2xx status code
func (o *GetAllPoliciesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policies unauthorized response has a 3xx status code
func (o *GetAllPoliciesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policies unauthorized response has a 4xx status code
func (o *GetAllPoliciesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all policies unauthorized response has a 5xx status code
func (o *GetAllPoliciesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policies unauthorized response a status code equal to that given
func (o *GetAllPoliciesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all policies unauthorized response
func (o *GetAllPoliciesUnauthorized) Code() int {
	return 401
}

func (o *GetAllPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getAllPoliciesUnauthorized ", 401)
}

func (o *GetAllPoliciesUnauthorized) String() string {
	return fmt.Sprintf("[GET /policies][%d] getAllPoliciesUnauthorized ", 401)
}

func (o *GetAllPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
