// Code generated by go-swagger; DO NOT EDIT.

package policy_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeletePolicyReader is a Reader for the DeletePolicy structure.
type DeletePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePolicyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePolicyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /policies/{id}] deletePolicy", response, response.Code())
	}
}

// NewDeletePolicyNoContent creates a DeletePolicyNoContent with default headers values
func NewDeletePolicyNoContent() *DeletePolicyNoContent {
	return &DeletePolicyNoContent{}
}

/*
DeletePolicyNoContent describes a response with status code 204, with default header values.

No content
*/
type DeletePolicyNoContent struct {
}

// IsSuccess returns true when this delete policy no content response has a 2xx status code
func (o *DeletePolicyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete policy no content response has a 3xx status code
func (o *DeletePolicyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy no content response has a 4xx status code
func (o *DeletePolicyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete policy no content response has a 5xx status code
func (o *DeletePolicyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy no content response a status code equal to that given
func (o *DeletePolicyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete policy no content response
func (o *DeletePolicyNoContent) Code() int {
	return 204
}

func (o *DeletePolicyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /policies/{id}][%d] deletePolicyNoContent ", 204)
}

func (o *DeletePolicyNoContent) String() string {
	return fmt.Sprintf("[DELETE /policies/{id}][%d] deletePolicyNoContent ", 204)
}

func (o *DeletePolicyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyUnauthorized creates a DeletePolicyUnauthorized with default headers values
func NewDeletePolicyUnauthorized() *DeletePolicyUnauthorized {
	return &DeletePolicyUnauthorized{}
}

/*
DeletePolicyUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type DeletePolicyUnauthorized struct {
}

// IsSuccess returns true when this delete policy unauthorized response has a 2xx status code
func (o *DeletePolicyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy unauthorized response has a 3xx status code
func (o *DeletePolicyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy unauthorized response has a 4xx status code
func (o *DeletePolicyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy unauthorized response has a 5xx status code
func (o *DeletePolicyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy unauthorized response a status code equal to that given
func (o *DeletePolicyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete policy unauthorized response
func (o *DeletePolicyUnauthorized) Code() int {
	return 401
}

func (o *DeletePolicyUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /policies/{id}][%d] deletePolicyUnauthorized ", 401)
}

func (o *DeletePolicyUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /policies/{id}][%d] deletePolicyUnauthorized ", 401)
}

func (o *DeletePolicyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyNotFound creates a DeletePolicyNotFound with default headers values
func NewDeletePolicyNotFound() *DeletePolicyNotFound {
	return &DeletePolicyNotFound{}
}

/*
DeletePolicyNotFound describes a response with status code 404, with default header values.

Cannot find a policy with the specified ID or the user does not have 'delete' rights over it
*/
type DeletePolicyNotFound struct {
}

// IsSuccess returns true when this delete policy not found response has a 2xx status code
func (o *DeletePolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy not found response has a 3xx status code
func (o *DeletePolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy not found response has a 4xx status code
func (o *DeletePolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy not found response has a 5xx status code
func (o *DeletePolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy not found response a status code equal to that given
func (o *DeletePolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete policy not found response
func (o *DeletePolicyNotFound) Code() int {
	return 404
}

func (o *DeletePolicyNotFound) Error() string {
	return fmt.Sprintf("[DELETE /policies/{id}][%d] deletePolicyNotFound ", 404)
}

func (o *DeletePolicyNotFound) String() string {
	return fmt.Sprintf("[DELETE /policies/{id}][%d] deletePolicyNotFound ", 404)
}

func (o *DeletePolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
