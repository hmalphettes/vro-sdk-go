// Code generated by go-swagger; DO NOT EDIT.

package policy_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetPolicyStateReader is a Reader for the GetPolicyState structure.
type GetPolicyStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPolicyStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPolicyStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPolicyStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPolicyStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /policies/{id}/state] getPolicyState", response, response.Code())
	}
}

// NewGetPolicyStateOK creates a GetPolicyStateOK with default headers values
func NewGetPolicyStateOK() *GetPolicyStateOK {
	return &GetPolicyStateOK{}
}

/*
GetPolicyStateOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetPolicyStateOK struct {
	Payload string
}

// IsSuccess returns true when this get policy state o k response has a 2xx status code
func (o *GetPolicyStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get policy state o k response has a 3xx status code
func (o *GetPolicyStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy state o k response has a 4xx status code
func (o *GetPolicyStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policy state o k response has a 5xx status code
func (o *GetPolicyStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy state o k response a status code equal to that given
func (o *GetPolicyStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get policy state o k response
func (o *GetPolicyStateOK) Code() int {
	return 200
}

func (o *GetPolicyStateOK) Error() string {
	return fmt.Sprintf("[GET /policies/{id}/state][%d] getPolicyStateOK  %+v", 200, o.Payload)
}

func (o *GetPolicyStateOK) String() string {
	return fmt.Sprintf("[GET /policies/{id}/state][%d] getPolicyStateOK  %+v", 200, o.Payload)
}

func (o *GetPolicyStateOK) GetPayload() string {
	return o.Payload
}

func (o *GetPolicyStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPolicyStateUnauthorized creates a GetPolicyStateUnauthorized with default headers values
func NewGetPolicyStateUnauthorized() *GetPolicyStateUnauthorized {
	return &GetPolicyStateUnauthorized{}
}

/*
GetPolicyStateUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type GetPolicyStateUnauthorized struct {
}

// IsSuccess returns true when this get policy state unauthorized response has a 2xx status code
func (o *GetPolicyStateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy state unauthorized response has a 3xx status code
func (o *GetPolicyStateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy state unauthorized response has a 4xx status code
func (o *GetPolicyStateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy state unauthorized response has a 5xx status code
func (o *GetPolicyStateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy state unauthorized response a status code equal to that given
func (o *GetPolicyStateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get policy state unauthorized response
func (o *GetPolicyStateUnauthorized) Code() int {
	return 401
}

func (o *GetPolicyStateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /policies/{id}/state][%d] getPolicyStateUnauthorized ", 401)
}

func (o *GetPolicyStateUnauthorized) String() string {
	return fmt.Sprintf("[GET /policies/{id}/state][%d] getPolicyStateUnauthorized ", 401)
}

func (o *GetPolicyStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPolicyStateNotFound creates a GetPolicyStateNotFound with default headers values
func NewGetPolicyStateNotFound() *GetPolicyStateNotFound {
	return &GetPolicyStateNotFound{}
}

/*
GetPolicyStateNotFound describes a response with status code 404, with default header values.

Cannot find a policy with the specified ID
*/
type GetPolicyStateNotFound struct {
}

// IsSuccess returns true when this get policy state not found response has a 2xx status code
func (o *GetPolicyStateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get policy state not found response has a 3xx status code
func (o *GetPolicyStateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policy state not found response has a 4xx status code
func (o *GetPolicyStateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get policy state not found response has a 5xx status code
func (o *GetPolicyStateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get policy state not found response a status code equal to that given
func (o *GetPolicyStateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get policy state not found response
func (o *GetPolicyStateNotFound) Code() int {
	return 404
}

func (o *GetPolicyStateNotFound) Error() string {
	return fmt.Sprintf("[GET /policies/{id}/state][%d] getPolicyStateNotFound ", 404)
}

func (o *GetPolicyStateNotFound) String() string {
	return fmt.Sprintf("[GET /policies/{id}/state][%d] getPolicyStateNotFound ", 404)
}

func (o *GetPolicyStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
