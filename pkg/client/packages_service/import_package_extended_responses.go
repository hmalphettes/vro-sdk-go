// Code generated by go-swagger; DO NOT EDIT.

package packages_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ImportPackageExtendedReader is a Reader for the ImportPackageExtended structure.
type ImportPackageExtendedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportPackageExtendedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewImportPackageExtendedCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewImportPackageExtendedUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImportPackageExtendedConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /packages/extendedImport] importPackageExtended", response, response.Code())
	}
}

// NewImportPackageExtendedCreated creates a ImportPackageExtendedCreated with default headers values
func NewImportPackageExtendedCreated() *ImportPackageExtendedCreated {
	return &ImportPackageExtendedCreated{}
}

/*
ImportPackageExtendedCreated describes a response with status code 201, with default header values.

Package successfully imported
*/
type ImportPackageExtendedCreated struct {
}

// IsSuccess returns true when this import package extended created response has a 2xx status code
func (o *ImportPackageExtendedCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import package extended created response has a 3xx status code
func (o *ImportPackageExtendedCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import package extended created response has a 4xx status code
func (o *ImportPackageExtendedCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this import package extended created response has a 5xx status code
func (o *ImportPackageExtendedCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this import package extended created response a status code equal to that given
func (o *ImportPackageExtendedCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the import package extended created response
func (o *ImportPackageExtendedCreated) Code() int {
	return 201
}

func (o *ImportPackageExtendedCreated) Error() string {
	return fmt.Sprintf("[POST /packages/extendedImport][%d] importPackageExtendedCreated ", 201)
}

func (o *ImportPackageExtendedCreated) String() string {
	return fmt.Sprintf("[POST /packages/extendedImport][%d] importPackageExtendedCreated ", 201)
}

func (o *ImportPackageExtendedCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportPackageExtendedUnauthorized creates a ImportPackageExtendedUnauthorized with default headers values
func NewImportPackageExtendedUnauthorized() *ImportPackageExtendedUnauthorized {
	return &ImportPackageExtendedUnauthorized{}
}

/*
ImportPackageExtendedUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type ImportPackageExtendedUnauthorized struct {
}

// IsSuccess returns true when this import package extended unauthorized response has a 2xx status code
func (o *ImportPackageExtendedUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import package extended unauthorized response has a 3xx status code
func (o *ImportPackageExtendedUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import package extended unauthorized response has a 4xx status code
func (o *ImportPackageExtendedUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import package extended unauthorized response has a 5xx status code
func (o *ImportPackageExtendedUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import package extended unauthorized response a status code equal to that given
func (o *ImportPackageExtendedUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import package extended unauthorized response
func (o *ImportPackageExtendedUnauthorized) Code() int {
	return 401
}

func (o *ImportPackageExtendedUnauthorized) Error() string {
	return fmt.Sprintf("[POST /packages/extendedImport][%d] importPackageExtendedUnauthorized ", 401)
}

func (o *ImportPackageExtendedUnauthorized) String() string {
	return fmt.Sprintf("[POST /packages/extendedImport][%d] importPackageExtendedUnauthorized ", 401)
}

func (o *ImportPackageExtendedUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportPackageExtendedConflict creates a ImportPackageExtendedConflict with default headers values
func NewImportPackageExtendedConflict() *ImportPackageExtendedConflict {
	return &ImportPackageExtendedConflict{}
}

/*
ImportPackageExtendedConflict describes a response with status code 409, with default header values.

One or more package elements have an older version.
*/
type ImportPackageExtendedConflict struct {
}

// IsSuccess returns true when this import package extended conflict response has a 2xx status code
func (o *ImportPackageExtendedConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import package extended conflict response has a 3xx status code
func (o *ImportPackageExtendedConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import package extended conflict response has a 4xx status code
func (o *ImportPackageExtendedConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this import package extended conflict response has a 5xx status code
func (o *ImportPackageExtendedConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this import package extended conflict response a status code equal to that given
func (o *ImportPackageExtendedConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the import package extended conflict response
func (o *ImportPackageExtendedConflict) Code() int {
	return 409
}

func (o *ImportPackageExtendedConflict) Error() string {
	return fmt.Sprintf("[POST /packages/extendedImport][%d] importPackageExtendedConflict ", 409)
}

func (o *ImportPackageExtendedConflict) String() string {
	return fmt.Sprintf("[POST /packages/extendedImport][%d] importPackageExtendedConflict ", 409)
}

func (o *ImportPackageExtendedConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
