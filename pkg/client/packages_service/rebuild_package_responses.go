// Code generated by go-swagger; DO NOT EDIT.

package packages_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RebuildPackageReader is a Reader for the RebuildPackage structure.
type RebuildPackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RebuildPackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewRebuildPackageAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRebuildPackageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRebuildPackageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /packages/{packageName}/rebuild] rebuildPackage", response, response.Code())
	}
}

// NewRebuildPackageAccepted creates a RebuildPackageAccepted with default headers values
func NewRebuildPackageAccepted() *RebuildPackageAccepted {
	return &RebuildPackageAccepted{}
}

/*
RebuildPackageAccepted describes a response with status code 202, with default header values.

The request is successful
*/
type RebuildPackageAccepted struct {
}

// IsSuccess returns true when this rebuild package accepted response has a 2xx status code
func (o *RebuildPackageAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this rebuild package accepted response has a 3xx status code
func (o *RebuildPackageAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rebuild package accepted response has a 4xx status code
func (o *RebuildPackageAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this rebuild package accepted response has a 5xx status code
func (o *RebuildPackageAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this rebuild package accepted response a status code equal to that given
func (o *RebuildPackageAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the rebuild package accepted response
func (o *RebuildPackageAccepted) Code() int {
	return 202
}

func (o *RebuildPackageAccepted) Error() string {
	return fmt.Sprintf("[POST /packages/{packageName}/rebuild][%d] rebuildPackageAccepted ", 202)
}

func (o *RebuildPackageAccepted) String() string {
	return fmt.Sprintf("[POST /packages/{packageName}/rebuild][%d] rebuildPackageAccepted ", 202)
}

func (o *RebuildPackageAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRebuildPackageUnauthorized creates a RebuildPackageUnauthorized with default headers values
func NewRebuildPackageUnauthorized() *RebuildPackageUnauthorized {
	return &RebuildPackageUnauthorized{}
}

/*
RebuildPackageUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type RebuildPackageUnauthorized struct {
}

// IsSuccess returns true when this rebuild package unauthorized response has a 2xx status code
func (o *RebuildPackageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rebuild package unauthorized response has a 3xx status code
func (o *RebuildPackageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rebuild package unauthorized response has a 4xx status code
func (o *RebuildPackageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this rebuild package unauthorized response has a 5xx status code
func (o *RebuildPackageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this rebuild package unauthorized response a status code equal to that given
func (o *RebuildPackageUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the rebuild package unauthorized response
func (o *RebuildPackageUnauthorized) Code() int {
	return 401
}

func (o *RebuildPackageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /packages/{packageName}/rebuild][%d] rebuildPackageUnauthorized ", 401)
}

func (o *RebuildPackageUnauthorized) String() string {
	return fmt.Sprintf("[POST /packages/{packageName}/rebuild][%d] rebuildPackageUnauthorized ", 401)
}

func (o *RebuildPackageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRebuildPackageNotFound creates a RebuildPackageNotFound with default headers values
func NewRebuildPackageNotFound() *RebuildPackageNotFound {
	return &RebuildPackageNotFound{}
}

/*
RebuildPackageNotFound describes a response with status code 404, with default header values.

Package doesn't exist
*/
type RebuildPackageNotFound struct {
}

// IsSuccess returns true when this rebuild package not found response has a 2xx status code
func (o *RebuildPackageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rebuild package not found response has a 3xx status code
func (o *RebuildPackageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rebuild package not found response has a 4xx status code
func (o *RebuildPackageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this rebuild package not found response has a 5xx status code
func (o *RebuildPackageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this rebuild package not found response a status code equal to that given
func (o *RebuildPackageNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the rebuild package not found response
func (o *RebuildPackageNotFound) Code() int {
	return 404
}

func (o *RebuildPackageNotFound) Error() string {
	return fmt.Sprintf("[POST /packages/{packageName}/rebuild][%d] rebuildPackageNotFound ", 404)
}

func (o *RebuildPackageNotFound) String() string {
	return fmt.Sprintf("[POST /packages/{packageName}/rebuild][%d] rebuildPackageNotFound ", 404)
}

func (o *RebuildPackageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
