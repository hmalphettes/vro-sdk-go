// Code generated by go-swagger; DO NOT EDIT.

package packages_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteActionElementReader is a Reader for the DeleteActionElement structure.
type DeleteActionElementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteActionElementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteActionElementNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteActionElementUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteActionElementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /packages/{packageName}/action/{id}] deleteActionElement", response, response.Code())
	}
}

// NewDeleteActionElementNoContent creates a DeleteActionElementNoContent with default headers values
func NewDeleteActionElementNoContent() *DeleteActionElementNoContent {
	return &DeleteActionElementNoContent{}
}

/*
DeleteActionElementNoContent describes a response with status code 204, with default header values.

The request is successful
*/
type DeleteActionElementNoContent struct {
}

// IsSuccess returns true when this delete action element no content response has a 2xx status code
func (o *DeleteActionElementNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete action element no content response has a 3xx status code
func (o *DeleteActionElementNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action element no content response has a 4xx status code
func (o *DeleteActionElementNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete action element no content response has a 5xx status code
func (o *DeleteActionElementNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action element no content response a status code equal to that given
func (o *DeleteActionElementNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete action element no content response
func (o *DeleteActionElementNoContent) Code() int {
	return 204
}

func (o *DeleteActionElementNoContent) Error() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/action/{id}][%d] deleteActionElementNoContent ", 204)
}

func (o *DeleteActionElementNoContent) String() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/action/{id}][%d] deleteActionElementNoContent ", 204)
}

func (o *DeleteActionElementNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteActionElementUnauthorized creates a DeleteActionElementUnauthorized with default headers values
func NewDeleteActionElementUnauthorized() *DeleteActionElementUnauthorized {
	return &DeleteActionElementUnauthorized{}
}

/*
DeleteActionElementUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type DeleteActionElementUnauthorized struct {
}

// IsSuccess returns true when this delete action element unauthorized response has a 2xx status code
func (o *DeleteActionElementUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete action element unauthorized response has a 3xx status code
func (o *DeleteActionElementUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action element unauthorized response has a 4xx status code
func (o *DeleteActionElementUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete action element unauthorized response has a 5xx status code
func (o *DeleteActionElementUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action element unauthorized response a status code equal to that given
func (o *DeleteActionElementUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete action element unauthorized response
func (o *DeleteActionElementUnauthorized) Code() int {
	return 401
}

func (o *DeleteActionElementUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/action/{id}][%d] deleteActionElementUnauthorized ", 401)
}

func (o *DeleteActionElementUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/action/{id}][%d] deleteActionElementUnauthorized ", 401)
}

func (o *DeleteActionElementUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteActionElementNotFound creates a DeleteActionElementNotFound with default headers values
func NewDeleteActionElementNotFound() *DeleteActionElementNotFound {
	return &DeleteActionElementNotFound{}
}

/*
DeleteActionElementNotFound describes a response with status code 404, with default header values.

Package or action element is missing
*/
type DeleteActionElementNotFound struct {
}

// IsSuccess returns true when this delete action element not found response has a 2xx status code
func (o *DeleteActionElementNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete action element not found response has a 3xx status code
func (o *DeleteActionElementNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete action element not found response has a 4xx status code
func (o *DeleteActionElementNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete action element not found response has a 5xx status code
func (o *DeleteActionElementNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete action element not found response a status code equal to that given
func (o *DeleteActionElementNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete action element not found response
func (o *DeleteActionElementNotFound) Code() int {
	return 404
}

func (o *DeleteActionElementNotFound) Error() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/action/{id}][%d] deleteActionElementNotFound ", 404)
}

func (o *DeleteActionElementNotFound) String() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/action/{id}][%d] deleteActionElementNotFound ", 404)
}

func (o *DeleteActionElementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
