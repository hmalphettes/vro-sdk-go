// Code generated by go-swagger; DO NOT EDIT.

package packages_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteConfigurationElementReader is a Reader for the DeleteConfigurationElement structure.
type DeleteConfigurationElementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConfigurationElementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteConfigurationElementNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteConfigurationElementUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteConfigurationElementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /packages/{packageName}/configuration/{id}] deleteConfigurationElement", response, response.Code())
	}
}

// NewDeleteConfigurationElementNoContent creates a DeleteConfigurationElementNoContent with default headers values
func NewDeleteConfigurationElementNoContent() *DeleteConfigurationElementNoContent {
	return &DeleteConfigurationElementNoContent{}
}

/*
DeleteConfigurationElementNoContent describes a response with status code 204, with default header values.

The request is successful
*/
type DeleteConfigurationElementNoContent struct {
}

// IsSuccess returns true when this delete configuration element no content response has a 2xx status code
func (o *DeleteConfigurationElementNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete configuration element no content response has a 3xx status code
func (o *DeleteConfigurationElementNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete configuration element no content response has a 4xx status code
func (o *DeleteConfigurationElementNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete configuration element no content response has a 5xx status code
func (o *DeleteConfigurationElementNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete configuration element no content response a status code equal to that given
func (o *DeleteConfigurationElementNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete configuration element no content response
func (o *DeleteConfigurationElementNoContent) Code() int {
	return 204
}

func (o *DeleteConfigurationElementNoContent) Error() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/configuration/{id}][%d] deleteConfigurationElementNoContent ", 204)
}

func (o *DeleteConfigurationElementNoContent) String() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/configuration/{id}][%d] deleteConfigurationElementNoContent ", 204)
}

func (o *DeleteConfigurationElementNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConfigurationElementUnauthorized creates a DeleteConfigurationElementUnauthorized with default headers values
func NewDeleteConfigurationElementUnauthorized() *DeleteConfigurationElementUnauthorized {
	return &DeleteConfigurationElementUnauthorized{}
}

/*
DeleteConfigurationElementUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type DeleteConfigurationElementUnauthorized struct {
}

// IsSuccess returns true when this delete configuration element unauthorized response has a 2xx status code
func (o *DeleteConfigurationElementUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete configuration element unauthorized response has a 3xx status code
func (o *DeleteConfigurationElementUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete configuration element unauthorized response has a 4xx status code
func (o *DeleteConfigurationElementUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete configuration element unauthorized response has a 5xx status code
func (o *DeleteConfigurationElementUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete configuration element unauthorized response a status code equal to that given
func (o *DeleteConfigurationElementUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete configuration element unauthorized response
func (o *DeleteConfigurationElementUnauthorized) Code() int {
	return 401
}

func (o *DeleteConfigurationElementUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/configuration/{id}][%d] deleteConfigurationElementUnauthorized ", 401)
}

func (o *DeleteConfigurationElementUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/configuration/{id}][%d] deleteConfigurationElementUnauthorized ", 401)
}

func (o *DeleteConfigurationElementUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConfigurationElementNotFound creates a DeleteConfigurationElementNotFound with default headers values
func NewDeleteConfigurationElementNotFound() *DeleteConfigurationElementNotFound {
	return &DeleteConfigurationElementNotFound{}
}

/*
DeleteConfigurationElementNotFound describes a response with status code 404, with default header values.

Package or configuration element is missing
*/
type DeleteConfigurationElementNotFound struct {
}

// IsSuccess returns true when this delete configuration element not found response has a 2xx status code
func (o *DeleteConfigurationElementNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete configuration element not found response has a 3xx status code
func (o *DeleteConfigurationElementNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete configuration element not found response has a 4xx status code
func (o *DeleteConfigurationElementNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete configuration element not found response has a 5xx status code
func (o *DeleteConfigurationElementNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete configuration element not found response a status code equal to that given
func (o *DeleteConfigurationElementNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete configuration element not found response
func (o *DeleteConfigurationElementNotFound) Code() int {
	return 404
}

func (o *DeleteConfigurationElementNotFound) Error() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/configuration/{id}][%d] deleteConfigurationElementNotFound ", 404)
}

func (o *DeleteConfigurationElementNotFound) String() string {
	return fmt.Sprintf("[DELETE /packages/{packageName}/configuration/{id}][%d] deleteConfigurationElementNotFound ", 404)
}

func (o *DeleteConfigurationElementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
