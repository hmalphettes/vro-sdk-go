// Code generated by go-swagger; DO NOT EDIT.

package inventory_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// BrowseInventoryPathReader is a Reader for the BrowseInventoryPath structure.
type BrowseInventoryPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BrowseInventoryPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBrowseInventoryPathOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewBrowseInventoryPathUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /inventory/**] browseInventoryPath", response, response.Code())
	}
}

// NewBrowseInventoryPathOK creates a BrowseInventoryPathOK with default headers values
func NewBrowseInventoryPathOK() *BrowseInventoryPathOK {
	return &BrowseInventoryPathOK{}
}

/*
BrowseInventoryPathOK describes a response with status code 200, with default header values.

The request is successful.
*/
type BrowseInventoryPathOK struct {
	Payload *models.InventoryItem
}

// IsSuccess returns true when this browse inventory path o k response has a 2xx status code
func (o *BrowseInventoryPathOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this browse inventory path o k response has a 3xx status code
func (o *BrowseInventoryPathOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this browse inventory path o k response has a 4xx status code
func (o *BrowseInventoryPathOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this browse inventory path o k response has a 5xx status code
func (o *BrowseInventoryPathOK) IsServerError() bool {
	return false
}

// IsCode returns true when this browse inventory path o k response a status code equal to that given
func (o *BrowseInventoryPathOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the browse inventory path o k response
func (o *BrowseInventoryPathOK) Code() int {
	return 200
}

func (o *BrowseInventoryPathOK) Error() string {
	return fmt.Sprintf("[GET /inventory/**][%d] browseInventoryPathOK  %+v", 200, o.Payload)
}

func (o *BrowseInventoryPathOK) String() string {
	return fmt.Sprintf("[GET /inventory/**][%d] browseInventoryPathOK  %+v", 200, o.Payload)
}

func (o *BrowseInventoryPathOK) GetPayload() *models.InventoryItem {
	return o.Payload
}

func (o *BrowseInventoryPathOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InventoryItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBrowseInventoryPathUnauthorized creates a BrowseInventoryPathUnauthorized with default headers values
func NewBrowseInventoryPathUnauthorized() *BrowseInventoryPathUnauthorized {
	return &BrowseInventoryPathUnauthorized{}
}

/*
BrowseInventoryPathUnauthorized describes a response with status code 401, with default header values.

User is not authorized.
*/
type BrowseInventoryPathUnauthorized struct {
}

// IsSuccess returns true when this browse inventory path unauthorized response has a 2xx status code
func (o *BrowseInventoryPathUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this browse inventory path unauthorized response has a 3xx status code
func (o *BrowseInventoryPathUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this browse inventory path unauthorized response has a 4xx status code
func (o *BrowseInventoryPathUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this browse inventory path unauthorized response has a 5xx status code
func (o *BrowseInventoryPathUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this browse inventory path unauthorized response a status code equal to that given
func (o *BrowseInventoryPathUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the browse inventory path unauthorized response
func (o *BrowseInventoryPathUnauthorized) Code() int {
	return 401
}

func (o *BrowseInventoryPathUnauthorized) Error() string {
	return fmt.Sprintf("[GET /inventory/**][%d] browseInventoryPathUnauthorized ", 401)
}

func (o *BrowseInventoryPathUnauthorized) String() string {
	return fmt.Sprintf("[GET /inventory/**][%d] browseInventoryPathUnauthorized ", 401)
}

func (o *BrowseInventoryPathUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
