// Code generated by go-swagger; DO NOT EDIT.

package workflow_presentation_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// LoadExecutionForWorkflowPresentationReader is a Reader for the LoadExecutionForWorkflowPresentation structure.
type LoadExecutionForWorkflowPresentationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoadExecutionForWorkflowPresentationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoadExecutionForWorkflowPresentationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLoadExecutionForWorkflowPresentationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoadExecutionForWorkflowPresentationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLoadExecutionForWorkflowPresentationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /workflows/{workflowId}/presentation/instances/{executionId}] loadExecutionForWorkflowPresentation", response, response.Code())
	}
}

// NewLoadExecutionForWorkflowPresentationOK creates a LoadExecutionForWorkflowPresentationOK with default headers values
func NewLoadExecutionForWorkflowPresentationOK() *LoadExecutionForWorkflowPresentationOK {
	return &LoadExecutionForWorkflowPresentationOK{}
}

/*
LoadExecutionForWorkflowPresentationOK describes a response with status code 200, with default header values.

The request is successful
*/
type LoadExecutionForWorkflowPresentationOK struct {
	Payload *models.Execution
}

// IsSuccess returns true when this load execution for workflow presentation o k response has a 2xx status code
func (o *LoadExecutionForWorkflowPresentationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this load execution for workflow presentation o k response has a 3xx status code
func (o *LoadExecutionForWorkflowPresentationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this load execution for workflow presentation o k response has a 4xx status code
func (o *LoadExecutionForWorkflowPresentationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this load execution for workflow presentation o k response has a 5xx status code
func (o *LoadExecutionForWorkflowPresentationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this load execution for workflow presentation o k response a status code equal to that given
func (o *LoadExecutionForWorkflowPresentationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the load execution for workflow presentation o k response
func (o *LoadExecutionForWorkflowPresentationOK) Code() int {
	return 200
}

func (o *LoadExecutionForWorkflowPresentationOK) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationOK  %+v", 200, o.Payload)
}

func (o *LoadExecutionForWorkflowPresentationOK) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationOK  %+v", 200, o.Payload)
}

func (o *LoadExecutionForWorkflowPresentationOK) GetPayload() *models.Execution {
	return o.Payload
}

func (o *LoadExecutionForWorkflowPresentationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Execution)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoadExecutionForWorkflowPresentationUnauthorized creates a LoadExecutionForWorkflowPresentationUnauthorized with default headers values
func NewLoadExecutionForWorkflowPresentationUnauthorized() *LoadExecutionForWorkflowPresentationUnauthorized {
	return &LoadExecutionForWorkflowPresentationUnauthorized{}
}

/*
LoadExecutionForWorkflowPresentationUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type LoadExecutionForWorkflowPresentationUnauthorized struct {
}

// IsSuccess returns true when this load execution for workflow presentation unauthorized response has a 2xx status code
func (o *LoadExecutionForWorkflowPresentationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this load execution for workflow presentation unauthorized response has a 3xx status code
func (o *LoadExecutionForWorkflowPresentationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this load execution for workflow presentation unauthorized response has a 4xx status code
func (o *LoadExecutionForWorkflowPresentationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this load execution for workflow presentation unauthorized response has a 5xx status code
func (o *LoadExecutionForWorkflowPresentationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this load execution for workflow presentation unauthorized response a status code equal to that given
func (o *LoadExecutionForWorkflowPresentationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the load execution for workflow presentation unauthorized response
func (o *LoadExecutionForWorkflowPresentationUnauthorized) Code() int {
	return 401
}

func (o *LoadExecutionForWorkflowPresentationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationUnauthorized ", 401)
}

func (o *LoadExecutionForWorkflowPresentationUnauthorized) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationUnauthorized ", 401)
}

func (o *LoadExecutionForWorkflowPresentationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoadExecutionForWorkflowPresentationForbidden creates a LoadExecutionForWorkflowPresentationForbidden with default headers values
func NewLoadExecutionForWorkflowPresentationForbidden() *LoadExecutionForWorkflowPresentationForbidden {
	return &LoadExecutionForWorkflowPresentationForbidden{}
}

/*
LoadExecutionForWorkflowPresentationForbidden describes a response with status code 403, with default header values.

The user does not have 'read' access rights for that workflow
*/
type LoadExecutionForWorkflowPresentationForbidden struct {
}

// IsSuccess returns true when this load execution for workflow presentation forbidden response has a 2xx status code
func (o *LoadExecutionForWorkflowPresentationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this load execution for workflow presentation forbidden response has a 3xx status code
func (o *LoadExecutionForWorkflowPresentationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this load execution for workflow presentation forbidden response has a 4xx status code
func (o *LoadExecutionForWorkflowPresentationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this load execution for workflow presentation forbidden response has a 5xx status code
func (o *LoadExecutionForWorkflowPresentationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this load execution for workflow presentation forbidden response a status code equal to that given
func (o *LoadExecutionForWorkflowPresentationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the load execution for workflow presentation forbidden response
func (o *LoadExecutionForWorkflowPresentationForbidden) Code() int {
	return 403
}

func (o *LoadExecutionForWorkflowPresentationForbidden) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationForbidden ", 403)
}

func (o *LoadExecutionForWorkflowPresentationForbidden) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationForbidden ", 403)
}

func (o *LoadExecutionForWorkflowPresentationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoadExecutionForWorkflowPresentationNotFound creates a LoadExecutionForWorkflowPresentationNotFound with default headers values
func NewLoadExecutionForWorkflowPresentationNotFound() *LoadExecutionForWorkflowPresentationNotFound {
	return &LoadExecutionForWorkflowPresentationNotFound{}
}

/*
LoadExecutionForWorkflowPresentationNotFound describes a response with status code 404, with default header values.

Cannot find a workflow with the specified ID
*/
type LoadExecutionForWorkflowPresentationNotFound struct {
}

// IsSuccess returns true when this load execution for workflow presentation not found response has a 2xx status code
func (o *LoadExecutionForWorkflowPresentationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this load execution for workflow presentation not found response has a 3xx status code
func (o *LoadExecutionForWorkflowPresentationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this load execution for workflow presentation not found response has a 4xx status code
func (o *LoadExecutionForWorkflowPresentationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this load execution for workflow presentation not found response has a 5xx status code
func (o *LoadExecutionForWorkflowPresentationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this load execution for workflow presentation not found response a status code equal to that given
func (o *LoadExecutionForWorkflowPresentationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the load execution for workflow presentation not found response
func (o *LoadExecutionForWorkflowPresentationNotFound) Code() int {
	return 404
}

func (o *LoadExecutionForWorkflowPresentationNotFound) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationNotFound ", 404)
}

func (o *LoadExecutionForWorkflowPresentationNotFound) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/presentation/instances/{executionId}][%d] loadExecutionForWorkflowPresentationNotFound ", 404)
}

func (o *LoadExecutionForWorkflowPresentationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
