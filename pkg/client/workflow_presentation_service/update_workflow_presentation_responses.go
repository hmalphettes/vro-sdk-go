// Code generated by go-swagger; DO NOT EDIT.

package workflow_presentation_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// UpdateWorkflowPresentationReader is a Reader for the UpdateWorkflowPresentation structure.
type UpdateWorkflowPresentationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateWorkflowPresentationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateWorkflowPresentationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateWorkflowPresentationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateWorkflowPresentationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateWorkflowPresentationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateWorkflowPresentationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /workflows/{workflowId}/presentation/instances/{executionId}] updateWorkflowPresentation", response, response.Code())
	}
}

// NewUpdateWorkflowPresentationOK creates a UpdateWorkflowPresentationOK with default headers values
func NewUpdateWorkflowPresentationOK() *UpdateWorkflowPresentationOK {
	return &UpdateWorkflowPresentationOK{}
}

/*
UpdateWorkflowPresentationOK describes a response with status code 200, with default header values.

The request is successful
*/
type UpdateWorkflowPresentationOK struct {
	Payload *models.Execution
}

// IsSuccess returns true when this update workflow presentation o k response has a 2xx status code
func (o *UpdateWorkflowPresentationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update workflow presentation o k response has a 3xx status code
func (o *UpdateWorkflowPresentationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update workflow presentation o k response has a 4xx status code
func (o *UpdateWorkflowPresentationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update workflow presentation o k response has a 5xx status code
func (o *UpdateWorkflowPresentationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update workflow presentation o k response a status code equal to that given
func (o *UpdateWorkflowPresentationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update workflow presentation o k response
func (o *UpdateWorkflowPresentationOK) Code() int {
	return 200
}

func (o *UpdateWorkflowPresentationOK) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationOK  %+v", 200, o.Payload)
}

func (o *UpdateWorkflowPresentationOK) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationOK  %+v", 200, o.Payload)
}

func (o *UpdateWorkflowPresentationOK) GetPayload() *models.Execution {
	return o.Payload
}

func (o *UpdateWorkflowPresentationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Execution)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateWorkflowPresentationBadRequest creates a UpdateWorkflowPresentationBadRequest with default headers values
func NewUpdateWorkflowPresentationBadRequest() *UpdateWorkflowPresentationBadRequest {
	return &UpdateWorkflowPresentationBadRequest{}
}

/*
UpdateWorkflowPresentationBadRequest describes a response with status code 400, with default header values.

The request is invalid(validation error)
*/
type UpdateWorkflowPresentationBadRequest struct {
}

// IsSuccess returns true when this update workflow presentation bad request response has a 2xx status code
func (o *UpdateWorkflowPresentationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update workflow presentation bad request response has a 3xx status code
func (o *UpdateWorkflowPresentationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update workflow presentation bad request response has a 4xx status code
func (o *UpdateWorkflowPresentationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update workflow presentation bad request response has a 5xx status code
func (o *UpdateWorkflowPresentationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update workflow presentation bad request response a status code equal to that given
func (o *UpdateWorkflowPresentationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update workflow presentation bad request response
func (o *UpdateWorkflowPresentationBadRequest) Code() int {
	return 400
}

func (o *UpdateWorkflowPresentationBadRequest) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationBadRequest ", 400)
}

func (o *UpdateWorkflowPresentationBadRequest) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationBadRequest ", 400)
}

func (o *UpdateWorkflowPresentationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowPresentationUnauthorized creates a UpdateWorkflowPresentationUnauthorized with default headers values
func NewUpdateWorkflowPresentationUnauthorized() *UpdateWorkflowPresentationUnauthorized {
	return &UpdateWorkflowPresentationUnauthorized{}
}

/*
UpdateWorkflowPresentationUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type UpdateWorkflowPresentationUnauthorized struct {
}

// IsSuccess returns true when this update workflow presentation unauthorized response has a 2xx status code
func (o *UpdateWorkflowPresentationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update workflow presentation unauthorized response has a 3xx status code
func (o *UpdateWorkflowPresentationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update workflow presentation unauthorized response has a 4xx status code
func (o *UpdateWorkflowPresentationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update workflow presentation unauthorized response has a 5xx status code
func (o *UpdateWorkflowPresentationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update workflow presentation unauthorized response a status code equal to that given
func (o *UpdateWorkflowPresentationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update workflow presentation unauthorized response
func (o *UpdateWorkflowPresentationUnauthorized) Code() int {
	return 401
}

func (o *UpdateWorkflowPresentationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationUnauthorized ", 401)
}

func (o *UpdateWorkflowPresentationUnauthorized) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationUnauthorized ", 401)
}

func (o *UpdateWorkflowPresentationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowPresentationForbidden creates a UpdateWorkflowPresentationForbidden with default headers values
func NewUpdateWorkflowPresentationForbidden() *UpdateWorkflowPresentationForbidden {
	return &UpdateWorkflowPresentationForbidden{}
}

/*
UpdateWorkflowPresentationForbidden describes a response with status code 403, with default header values.

The user does not have 'read' access rights for that workflow
*/
type UpdateWorkflowPresentationForbidden struct {
}

// IsSuccess returns true when this update workflow presentation forbidden response has a 2xx status code
func (o *UpdateWorkflowPresentationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update workflow presentation forbidden response has a 3xx status code
func (o *UpdateWorkflowPresentationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update workflow presentation forbidden response has a 4xx status code
func (o *UpdateWorkflowPresentationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update workflow presentation forbidden response has a 5xx status code
func (o *UpdateWorkflowPresentationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update workflow presentation forbidden response a status code equal to that given
func (o *UpdateWorkflowPresentationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update workflow presentation forbidden response
func (o *UpdateWorkflowPresentationForbidden) Code() int {
	return 403
}

func (o *UpdateWorkflowPresentationForbidden) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationForbidden ", 403)
}

func (o *UpdateWorkflowPresentationForbidden) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationForbidden ", 403)
}

func (o *UpdateWorkflowPresentationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWorkflowPresentationNotFound creates a UpdateWorkflowPresentationNotFound with default headers values
func NewUpdateWorkflowPresentationNotFound() *UpdateWorkflowPresentationNotFound {
	return &UpdateWorkflowPresentationNotFound{}
}

/*
UpdateWorkflowPresentationNotFound describes a response with status code 404, with default header values.

Cannot find a workflow with the specified ID
*/
type UpdateWorkflowPresentationNotFound struct {
}

// IsSuccess returns true when this update workflow presentation not found response has a 2xx status code
func (o *UpdateWorkflowPresentationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update workflow presentation not found response has a 3xx status code
func (o *UpdateWorkflowPresentationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update workflow presentation not found response has a 4xx status code
func (o *UpdateWorkflowPresentationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update workflow presentation not found response has a 5xx status code
func (o *UpdateWorkflowPresentationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update workflow presentation not found response a status code equal to that given
func (o *UpdateWorkflowPresentationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update workflow presentation not found response
func (o *UpdateWorkflowPresentationNotFound) Code() int {
	return 404
}

func (o *UpdateWorkflowPresentationNotFound) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationNotFound ", 404)
}

func (o *UpdateWorkflowPresentationNotFound) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances/{executionId}][%d] updateWorkflowPresentationNotFound ", 404)
}

func (o *UpdateWorkflowPresentationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
