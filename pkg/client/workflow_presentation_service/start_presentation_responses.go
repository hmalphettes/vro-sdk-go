// Code generated by go-swagger; DO NOT EDIT.

package workflow_presentation_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// StartPresentationReader is a Reader for the StartPresentation structure.
type StartPresentationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartPresentationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartPresentationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartPresentationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStartPresentationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartPresentationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /workflows/{workflowId}/presentation/instances] startPresentation", response, response.Code())
	}
}

// NewStartPresentationOK creates a StartPresentationOK with default headers values
func NewStartPresentationOK() *StartPresentationOK {
	return &StartPresentationOK{}
}

/*
StartPresentationOK describes a response with status code 200, with default header values.

The request is successful
*/
type StartPresentationOK struct {
	Payload *models.Execution
}

// IsSuccess returns true when this start presentation o k response has a 2xx status code
func (o *StartPresentationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start presentation o k response has a 3xx status code
func (o *StartPresentationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start presentation o k response has a 4xx status code
func (o *StartPresentationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start presentation o k response has a 5xx status code
func (o *StartPresentationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start presentation o k response a status code equal to that given
func (o *StartPresentationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start presentation o k response
func (o *StartPresentationOK) Code() int {
	return 200
}

func (o *StartPresentationOK) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationOK  %+v", 200, o.Payload)
}

func (o *StartPresentationOK) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationOK  %+v", 200, o.Payload)
}

func (o *StartPresentationOK) GetPayload() *models.Execution {
	return o.Payload
}

func (o *StartPresentationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Execution)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartPresentationBadRequest creates a StartPresentationBadRequest with default headers values
func NewStartPresentationBadRequest() *StartPresentationBadRequest {
	return &StartPresentationBadRequest{}
}

/*
StartPresentationBadRequest describes a response with status code 400, with default header values.

The request is invalid(validation error)
*/
type StartPresentationBadRequest struct {
}

// IsSuccess returns true when this start presentation bad request response has a 2xx status code
func (o *StartPresentationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start presentation bad request response has a 3xx status code
func (o *StartPresentationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start presentation bad request response has a 4xx status code
func (o *StartPresentationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start presentation bad request response has a 5xx status code
func (o *StartPresentationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start presentation bad request response a status code equal to that given
func (o *StartPresentationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start presentation bad request response
func (o *StartPresentationBadRequest) Code() int {
	return 400
}

func (o *StartPresentationBadRequest) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationBadRequest ", 400)
}

func (o *StartPresentationBadRequest) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationBadRequest ", 400)
}

func (o *StartPresentationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartPresentationUnauthorized creates a StartPresentationUnauthorized with default headers values
func NewStartPresentationUnauthorized() *StartPresentationUnauthorized {
	return &StartPresentationUnauthorized{}
}

/*
StartPresentationUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type StartPresentationUnauthorized struct {
}

// IsSuccess returns true when this start presentation unauthorized response has a 2xx status code
func (o *StartPresentationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start presentation unauthorized response has a 3xx status code
func (o *StartPresentationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start presentation unauthorized response has a 4xx status code
func (o *StartPresentationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this start presentation unauthorized response has a 5xx status code
func (o *StartPresentationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this start presentation unauthorized response a status code equal to that given
func (o *StartPresentationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the start presentation unauthorized response
func (o *StartPresentationUnauthorized) Code() int {
	return 401
}

func (o *StartPresentationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationUnauthorized ", 401)
}

func (o *StartPresentationUnauthorized) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationUnauthorized ", 401)
}

func (o *StartPresentationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartPresentationNotFound creates a StartPresentationNotFound with default headers values
func NewStartPresentationNotFound() *StartPresentationNotFound {
	return &StartPresentationNotFound{}
}

/*
StartPresentationNotFound describes a response with status code 404, with default header values.

Cannot find a workflow with the specified ID or the user does not have 'read' access rights for that workflow
*/
type StartPresentationNotFound struct {
}

// IsSuccess returns true when this start presentation not found response has a 2xx status code
func (o *StartPresentationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start presentation not found response has a 3xx status code
func (o *StartPresentationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start presentation not found response has a 4xx status code
func (o *StartPresentationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this start presentation not found response has a 5xx status code
func (o *StartPresentationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this start presentation not found response a status code equal to that given
func (o *StartPresentationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the start presentation not found response
func (o *StartPresentationNotFound) Code() int {
	return 404
}

func (o *StartPresentationNotFound) Error() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationNotFound ", 404)
}

func (o *StartPresentationNotFound) String() string {
	return fmt.Sprintf("[POST /workflows/{workflowId}/presentation/instances][%d] startPresentationNotFound ", 404)
}

func (o *StartPresentationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
