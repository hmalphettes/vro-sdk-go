// Code generated by go-swagger; DO NOT EDIT.

package category_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetCategoryReader is a Reader for the GetCategory structure.
type GetCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCategoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /categories/{id}] getCategory", response, response.Code())
	}
}

// NewGetCategoryOK creates a GetCategoryOK with default headers values
func NewGetCategoryOK() *GetCategoryOK {
	return &GetCategoryOK{}
}

/*
GetCategoryOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetCategoryOK struct {
	Payload *models.Category
}

// IsSuccess returns true when this get category o k response has a 2xx status code
func (o *GetCategoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get category o k response has a 3xx status code
func (o *GetCategoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get category o k response has a 4xx status code
func (o *GetCategoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get category o k response has a 5xx status code
func (o *GetCategoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get category o k response a status code equal to that given
func (o *GetCategoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get category o k response
func (o *GetCategoryOK) Code() int {
	return 200
}

func (o *GetCategoryOK) Error() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryOK  %+v", 200, o.Payload)
}

func (o *GetCategoryOK) String() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryOK  %+v", 200, o.Payload)
}

func (o *GetCategoryOK) GetPayload() *models.Category {
	return o.Payload
}

func (o *GetCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Category)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCategoryUnauthorized creates a GetCategoryUnauthorized with default headers values
func NewGetCategoryUnauthorized() *GetCategoryUnauthorized {
	return &GetCategoryUnauthorized{}
}

/*
GetCategoryUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type GetCategoryUnauthorized struct {
}

// IsSuccess returns true when this get category unauthorized response has a 2xx status code
func (o *GetCategoryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get category unauthorized response has a 3xx status code
func (o *GetCategoryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get category unauthorized response has a 4xx status code
func (o *GetCategoryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get category unauthorized response has a 5xx status code
func (o *GetCategoryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get category unauthorized response a status code equal to that given
func (o *GetCategoryUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get category unauthorized response
func (o *GetCategoryUnauthorized) Code() int {
	return 401
}

func (o *GetCategoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryUnauthorized ", 401)
}

func (o *GetCategoryUnauthorized) String() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryUnauthorized ", 401)
}

func (o *GetCategoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCategoryNotFound creates a GetCategoryNotFound with default headers values
func NewGetCategoryNotFound() *GetCategoryNotFound {
	return &GetCategoryNotFound{}
}

/*
GetCategoryNotFound describes a response with status code 404, with default header values.

Cannot find a category with the specified ID
*/
type GetCategoryNotFound struct {
}

// IsSuccess returns true when this get category not found response has a 2xx status code
func (o *GetCategoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get category not found response has a 3xx status code
func (o *GetCategoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get category not found response has a 4xx status code
func (o *GetCategoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get category not found response has a 5xx status code
func (o *GetCategoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get category not found response a status code equal to that given
func (o *GetCategoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get category not found response
func (o *GetCategoryNotFound) Code() int {
	return 404
}

func (o *GetCategoryNotFound) Error() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryNotFound ", 404)
}

func (o *GetCategoryNotFound) String() string {
	return fmt.Sprintf("[GET /categories/{id}][%d] getCategoryNotFound ", 404)
}

func (o *GetCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
