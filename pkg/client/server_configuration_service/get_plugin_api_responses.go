// Code generated by go-swagger; DO NOT EDIT.

package server_configuration_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hmalphettes/vro-sdk-go/pkg/models"
)

// GetPluginAPIReader is a Reader for the GetPluginAPI structure.
type GetPluginAPIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginAPIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPluginAPIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPluginAPIUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPluginAPIForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /server-configuration/api/plugins/{plugin}/{version}/{build}] getPluginApi", response, response.Code())
	}
}

// NewGetPluginAPIOK creates a GetPluginAPIOK with default headers values
func NewGetPluginAPIOK() *GetPluginAPIOK {
	return &GetPluginAPIOK{}
}

/*
GetPluginAPIOK describes a response with status code 200, with default header values.

The request is successful.
*/
type GetPluginAPIOK struct {
	Payload *models.PluginDetails
}

// IsSuccess returns true when this get plugin Api o k response has a 2xx status code
func (o *GetPluginAPIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plugin Api o k response has a 3xx status code
func (o *GetPluginAPIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin Api o k response has a 4xx status code
func (o *GetPluginAPIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin Api o k response has a 5xx status code
func (o *GetPluginAPIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin Api o k response a status code equal to that given
func (o *GetPluginAPIOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get plugin Api o k response
func (o *GetPluginAPIOK) Code() int {
	return 200
}

func (o *GetPluginAPIOK) Error() string {
	return fmt.Sprintf("[GET /server-configuration/api/plugins/{plugin}/{version}/{build}][%d] getPluginApiOK  %+v", 200, o.Payload)
}

func (o *GetPluginAPIOK) String() string {
	return fmt.Sprintf("[GET /server-configuration/api/plugins/{plugin}/{version}/{build}][%d] getPluginApiOK  %+v", 200, o.Payload)
}

func (o *GetPluginAPIOK) GetPayload() *models.PluginDetails {
	return o.Payload
}

func (o *GetPluginAPIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PluginDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginAPIUnauthorized creates a GetPluginAPIUnauthorized with default headers values
func NewGetPluginAPIUnauthorized() *GetPluginAPIUnauthorized {
	return &GetPluginAPIUnauthorized{}
}

/*
GetPluginAPIUnauthorized describes a response with status code 401, with default header values.

User is not authenticated.
*/
type GetPluginAPIUnauthorized struct {
}

// IsSuccess returns true when this get plugin Api unauthorized response has a 2xx status code
func (o *GetPluginAPIUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin Api unauthorized response has a 3xx status code
func (o *GetPluginAPIUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin Api unauthorized response has a 4xx status code
func (o *GetPluginAPIUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin Api unauthorized response has a 5xx status code
func (o *GetPluginAPIUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin Api unauthorized response a status code equal to that given
func (o *GetPluginAPIUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get plugin Api unauthorized response
func (o *GetPluginAPIUnauthorized) Code() int {
	return 401
}

func (o *GetPluginAPIUnauthorized) Error() string {
	return fmt.Sprintf("[GET /server-configuration/api/plugins/{plugin}/{version}/{build}][%d] getPluginApiUnauthorized ", 401)
}

func (o *GetPluginAPIUnauthorized) String() string {
	return fmt.Sprintf("[GET /server-configuration/api/plugins/{plugin}/{version}/{build}][%d] getPluginApiUnauthorized ", 401)
}

func (o *GetPluginAPIUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPluginAPIForbidden creates a GetPluginAPIForbidden with default headers values
func NewGetPluginAPIForbidden() *GetPluginAPIForbidden {
	return &GetPluginAPIForbidden{}
}

/*
GetPluginAPIForbidden describes a response with status code 403, with default header values.

User is not authorized.
*/
type GetPluginAPIForbidden struct {
}

// IsSuccess returns true when this get plugin Api forbidden response has a 2xx status code
func (o *GetPluginAPIForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin Api forbidden response has a 3xx status code
func (o *GetPluginAPIForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin Api forbidden response has a 4xx status code
func (o *GetPluginAPIForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin Api forbidden response has a 5xx status code
func (o *GetPluginAPIForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin Api forbidden response a status code equal to that given
func (o *GetPluginAPIForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get plugin Api forbidden response
func (o *GetPluginAPIForbidden) Code() int {
	return 403
}

func (o *GetPluginAPIForbidden) Error() string {
	return fmt.Sprintf("[GET /server-configuration/api/plugins/{plugin}/{version}/{build}][%d] getPluginApiForbidden ", 403)
}

func (o *GetPluginAPIForbidden) String() string {
	return fmt.Sprintf("[GET /server-configuration/api/plugins/{plugin}/{version}/{build}][%d] getPluginApiForbidden ", 403)
}

func (o *GetPluginAPIForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
