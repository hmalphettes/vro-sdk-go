// Code generated by go-swagger; DO NOT EDIT.

package task_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetExecutionsReader is a Reader for the GetExecutions structure.
type GetExecutionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExecutionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExecutionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExecutionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExecutionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExecutionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /tasks/{id}/executions] getExecutions", response, response.Code())
	}
}

// NewGetExecutionsOK creates a GetExecutionsOK with default headers values
func NewGetExecutionsOK() *GetExecutionsOK {
	return &GetExecutionsOK{}
}

/*
GetExecutionsOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetExecutionsOK struct {
	Payload *models.Executions
}

// IsSuccess returns true when this get executions o k response has a 2xx status code
func (o *GetExecutionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get executions o k response has a 3xx status code
func (o *GetExecutionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executions o k response has a 4xx status code
func (o *GetExecutionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get executions o k response has a 5xx status code
func (o *GetExecutionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get executions o k response a status code equal to that given
func (o *GetExecutionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get executions o k response
func (o *GetExecutionsOK) Code() int {
	return 200
}

func (o *GetExecutionsOK) Error() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsOK  %+v", 200, o.Payload)
}

func (o *GetExecutionsOK) String() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsOK  %+v", 200, o.Payload)
}

func (o *GetExecutionsOK) GetPayload() *models.Executions {
	return o.Payload
}

func (o *GetExecutionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Executions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutionsBadRequest creates a GetExecutionsBadRequest with default headers values
func NewGetExecutionsBadRequest() *GetExecutionsBadRequest {
	return &GetExecutionsBadRequest{}
}

/*
GetExecutionsBadRequest describes a response with status code 400, with default header values.

The request is invalid(validation error)
*/
type GetExecutionsBadRequest struct {
}

// IsSuccess returns true when this get executions bad request response has a 2xx status code
func (o *GetExecutionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executions bad request response has a 3xx status code
func (o *GetExecutionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executions bad request response has a 4xx status code
func (o *GetExecutionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executions bad request response has a 5xx status code
func (o *GetExecutionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get executions bad request response a status code equal to that given
func (o *GetExecutionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get executions bad request response
func (o *GetExecutionsBadRequest) Code() int {
	return 400
}

func (o *GetExecutionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsBadRequest ", 400)
}

func (o *GetExecutionsBadRequest) String() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsBadRequest ", 400)
}

func (o *GetExecutionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutionsUnauthorized creates a GetExecutionsUnauthorized with default headers values
func NewGetExecutionsUnauthorized() *GetExecutionsUnauthorized {
	return &GetExecutionsUnauthorized{}
}

/*
GetExecutionsUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type GetExecutionsUnauthorized struct {
}

// IsSuccess returns true when this get executions unauthorized response has a 2xx status code
func (o *GetExecutionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executions unauthorized response has a 3xx status code
func (o *GetExecutionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executions unauthorized response has a 4xx status code
func (o *GetExecutionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executions unauthorized response has a 5xx status code
func (o *GetExecutionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get executions unauthorized response a status code equal to that given
func (o *GetExecutionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get executions unauthorized response
func (o *GetExecutionsUnauthorized) Code() int {
	return 401
}

func (o *GetExecutionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsUnauthorized ", 401)
}

func (o *GetExecutionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsUnauthorized ", 401)
}

func (o *GetExecutionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutionsNotFound creates a GetExecutionsNotFound with default headers values
func NewGetExecutionsNotFound() *GetExecutionsNotFound {
	return &GetExecutionsNotFound{}
}

/*
GetExecutionsNotFound describes a response with status code 404, with default header values.

Can not find a task with the specified ID or the user does not have 'read' access rights for that workflow
*/
type GetExecutionsNotFound struct {
}

// IsSuccess returns true when this get executions not found response has a 2xx status code
func (o *GetExecutionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executions not found response has a 3xx status code
func (o *GetExecutionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executions not found response has a 4xx status code
func (o *GetExecutionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executions not found response has a 5xx status code
func (o *GetExecutionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get executions not found response a status code equal to that given
func (o *GetExecutionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get executions not found response
func (o *GetExecutionsNotFound) Code() int {
	return 404
}

func (o *GetExecutionsNotFound) Error() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsNotFound ", 404)
}

func (o *GetExecutionsNotFound) String() string {
	return fmt.Sprintf("[GET /tasks/{id}/executions][%d] getExecutionsNotFound ", 404)
}

func (o *GetExecutionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
