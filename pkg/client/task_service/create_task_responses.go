// Code generated by go-swagger; DO NOT EDIT.

package task_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateTaskReader is a Reader for the CreateTask structure.
type CreateTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewCreateTaskAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateTaskUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /tasks] createTask", response, response.Code())
	}
}

// NewCreateTaskAccepted creates a CreateTaskAccepted with default headers values
func NewCreateTaskAccepted() *CreateTaskAccepted {
	return &CreateTaskAccepted{}
}

/*
CreateTaskAccepted describes a response with status code 202, with default header values.

The request is successful
*/
type CreateTaskAccepted struct {
}

// IsSuccess returns true when this create task accepted response has a 2xx status code
func (o *CreateTaskAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create task accepted response has a 3xx status code
func (o *CreateTaskAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task accepted response has a 4xx status code
func (o *CreateTaskAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this create task accepted response has a 5xx status code
func (o *CreateTaskAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this create task accepted response a status code equal to that given
func (o *CreateTaskAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the create task accepted response
func (o *CreateTaskAccepted) Code() int {
	return 202
}

func (o *CreateTaskAccepted) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskAccepted ", 202)
}

func (o *CreateTaskAccepted) String() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskAccepted ", 202)
}

func (o *CreateTaskAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateTaskBadRequest creates a CreateTaskBadRequest with default headers values
func NewCreateTaskBadRequest() *CreateTaskBadRequest {
	return &CreateTaskBadRequest{}
}

/*
CreateTaskBadRequest describes a response with status code 400, with default header values.

The request is invalid(validation error)
*/
type CreateTaskBadRequest struct {
}

// IsSuccess returns true when this create task bad request response has a 2xx status code
func (o *CreateTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task bad request response has a 3xx status code
func (o *CreateTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task bad request response has a 4xx status code
func (o *CreateTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task bad request response has a 5xx status code
func (o *CreateTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create task bad request response a status code equal to that given
func (o *CreateTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create task bad request response
func (o *CreateTaskBadRequest) Code() int {
	return 400
}

func (o *CreateTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskBadRequest ", 400)
}

func (o *CreateTaskBadRequest) String() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskBadRequest ", 400)
}

func (o *CreateTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateTaskUnauthorized creates a CreateTaskUnauthorized with default headers values
func NewCreateTaskUnauthorized() *CreateTaskUnauthorized {
	return &CreateTaskUnauthorized{}
}

/*
CreateTaskUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type CreateTaskUnauthorized struct {
}

// IsSuccess returns true when this create task unauthorized response has a 2xx status code
func (o *CreateTaskUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task unauthorized response has a 3xx status code
func (o *CreateTaskUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task unauthorized response has a 4xx status code
func (o *CreateTaskUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task unauthorized response has a 5xx status code
func (o *CreateTaskUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create task unauthorized response a status code equal to that given
func (o *CreateTaskUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create task unauthorized response
func (o *CreateTaskUnauthorized) Code() int {
	return 401
}

func (o *CreateTaskUnauthorized) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskUnauthorized ", 401)
}

func (o *CreateTaskUnauthorized) String() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskUnauthorized ", 401)
}

func (o *CreateTaskUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateTaskNotFound creates a CreateTaskNotFound with default headers values
func NewCreateTaskNotFound() *CreateTaskNotFound {
	return &CreateTaskNotFound{}
}

/*
CreateTaskNotFound describes a response with status code 404, with default header values.

Can not find a workflow with the specified ID or the user does not have 'read' access rights for that workflow
*/
type CreateTaskNotFound struct {
}

// IsSuccess returns true when this create task not found response has a 2xx status code
func (o *CreateTaskNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task not found response has a 3xx status code
func (o *CreateTaskNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task not found response has a 4xx status code
func (o *CreateTaskNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task not found response has a 5xx status code
func (o *CreateTaskNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create task not found response a status code equal to that given
func (o *CreateTaskNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create task not found response
func (o *CreateTaskNotFound) Code() int {
	return 404
}

func (o *CreateTaskNotFound) Error() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskNotFound ", 404)
}

func (o *CreateTaskNotFound) String() string {
	return fmt.Sprintf("[POST /tasks][%d] createTaskNotFound ", 404)
}

func (o *CreateTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
