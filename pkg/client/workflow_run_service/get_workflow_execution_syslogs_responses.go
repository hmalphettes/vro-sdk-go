// Code generated by go-swagger; DO NOT EDIT.

package workflow_run_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// GetWorkflowExecutionSyslogsReader is a Reader for the GetWorkflowExecutionSyslogs structure.
type GetWorkflowExecutionSyslogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowExecutionSyslogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowExecutionSyslogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowExecutionSyslogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowExecutionSyslogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /workflows/{workflowId}/executions/{executionId}/syslogs] getWorkflowExecutionSyslogs", response, response.Code())
	}
}

// NewGetWorkflowExecutionSyslogsOK creates a GetWorkflowExecutionSyslogsOK with default headers values
func NewGetWorkflowExecutionSyslogsOK() *GetWorkflowExecutionSyslogsOK {
	return &GetWorkflowExecutionSyslogsOK{}
}

/*
GetWorkflowExecutionSyslogsOK describes a response with status code 200, with default header values.

The request is successful
*/
type GetWorkflowExecutionSyslogsOK struct {
	Payload *models.SysLogs
}

// IsSuccess returns true when this get workflow execution syslogs o k response has a 2xx status code
func (o *GetWorkflowExecutionSyslogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflow execution syslogs o k response has a 3xx status code
func (o *GetWorkflowExecutionSyslogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow execution syslogs o k response has a 4xx status code
func (o *GetWorkflowExecutionSyslogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow execution syslogs o k response has a 5xx status code
func (o *GetWorkflowExecutionSyslogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow execution syslogs o k response a status code equal to that given
func (o *GetWorkflowExecutionSyslogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflow execution syslogs o k response
func (o *GetWorkflowExecutionSyslogsOK) Code() int {
	return 200
}

func (o *GetWorkflowExecutionSyslogsOK) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/syslogs][%d] getWorkflowExecutionSyslogsOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowExecutionSyslogsOK) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/syslogs][%d] getWorkflowExecutionSyslogsOK  %+v", 200, o.Payload)
}

func (o *GetWorkflowExecutionSyslogsOK) GetPayload() *models.SysLogs {
	return o.Payload
}

func (o *GetWorkflowExecutionSyslogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SysLogs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowExecutionSyslogsUnauthorized creates a GetWorkflowExecutionSyslogsUnauthorized with default headers values
func NewGetWorkflowExecutionSyslogsUnauthorized() *GetWorkflowExecutionSyslogsUnauthorized {
	return &GetWorkflowExecutionSyslogsUnauthorized{}
}

/*
GetWorkflowExecutionSyslogsUnauthorized describes a response with status code 401, with default header values.

The user is not authorized
*/
type GetWorkflowExecutionSyslogsUnauthorized struct {
}

// IsSuccess returns true when this get workflow execution syslogs unauthorized response has a 2xx status code
func (o *GetWorkflowExecutionSyslogsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow execution syslogs unauthorized response has a 3xx status code
func (o *GetWorkflowExecutionSyslogsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow execution syslogs unauthorized response has a 4xx status code
func (o *GetWorkflowExecutionSyslogsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow execution syslogs unauthorized response has a 5xx status code
func (o *GetWorkflowExecutionSyslogsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow execution syslogs unauthorized response a status code equal to that given
func (o *GetWorkflowExecutionSyslogsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workflow execution syslogs unauthorized response
func (o *GetWorkflowExecutionSyslogsUnauthorized) Code() int {
	return 401
}

func (o *GetWorkflowExecutionSyslogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/syslogs][%d] getWorkflowExecutionSyslogsUnauthorized ", 401)
}

func (o *GetWorkflowExecutionSyslogsUnauthorized) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/syslogs][%d] getWorkflowExecutionSyslogsUnauthorized ", 401)
}

func (o *GetWorkflowExecutionSyslogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowExecutionSyslogsNotFound creates a GetWorkflowExecutionSyslogsNotFound with default headers values
func NewGetWorkflowExecutionSyslogsNotFound() *GetWorkflowExecutionSyslogsNotFound {
	return &GetWorkflowExecutionSyslogsNotFound{}
}

/*
GetWorkflowExecutionSyslogsNotFound describes a response with status code 404, with default header values.

Can not find a workflow with the specified ID or the user does not have 'read' access rights for that workflow
*/
type GetWorkflowExecutionSyslogsNotFound struct {
}

// IsSuccess returns true when this get workflow execution syslogs not found response has a 2xx status code
func (o *GetWorkflowExecutionSyslogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow execution syslogs not found response has a 3xx status code
func (o *GetWorkflowExecutionSyslogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow execution syslogs not found response has a 4xx status code
func (o *GetWorkflowExecutionSyslogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow execution syslogs not found response has a 5xx status code
func (o *GetWorkflowExecutionSyslogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow execution syslogs not found response a status code equal to that given
func (o *GetWorkflowExecutionSyslogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflow execution syslogs not found response
func (o *GetWorkflowExecutionSyslogsNotFound) Code() int {
	return 404
}

func (o *GetWorkflowExecutionSyslogsNotFound) Error() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/syslogs][%d] getWorkflowExecutionSyslogsNotFound ", 404)
}

func (o *GetWorkflowExecutionSyslogsNotFound) String() string {
	return fmt.Sprintf("[GET /workflows/{workflowId}/executions/{executionId}/syslogs][%d] getWorkflowExecutionSyslogsNotFound ", 404)
}

func (o *GetWorkflowExecutionSyslogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
