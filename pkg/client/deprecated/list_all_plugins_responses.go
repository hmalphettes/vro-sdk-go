// Code generated by go-swagger; DO NOT EDIT.

package deprecated

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vmware/vra-sdk-go/pkg/models"
)

// ListAllPluginsReader is a Reader for the ListAllPlugins structure.
type ListAllPluginsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAllPluginsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAllPluginsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAllPluginsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAllPluginsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /plugins] listAllPlugins", response, response.Code())
	}
}

// NewListAllPluginsOK creates a ListAllPluginsOK with default headers values
func NewListAllPluginsOK() *ListAllPluginsOK {
	return &ListAllPluginsOK{}
}

/*
ListAllPluginsOK describes a response with status code 200, with default header values.

The request is successful
*/
type ListAllPluginsOK struct {
	Payload *models.Plugins
}

// IsSuccess returns true when this list all plugins o k response has a 2xx status code
func (o *ListAllPluginsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list all plugins o k response has a 3xx status code
func (o *ListAllPluginsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list all plugins o k response has a 4xx status code
func (o *ListAllPluginsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list all plugins o k response has a 5xx status code
func (o *ListAllPluginsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list all plugins o k response a status code equal to that given
func (o *ListAllPluginsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list all plugins o k response
func (o *ListAllPluginsOK) Code() int {
	return 200
}

func (o *ListAllPluginsOK) Error() string {
	return fmt.Sprintf("[GET /plugins][%d] listAllPluginsOK  %+v", 200, o.Payload)
}

func (o *ListAllPluginsOK) String() string {
	return fmt.Sprintf("[GET /plugins][%d] listAllPluginsOK  %+v", 200, o.Payload)
}

func (o *ListAllPluginsOK) GetPayload() *models.Plugins {
	return o.Payload
}

func (o *ListAllPluginsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Plugins)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAllPluginsUnauthorized creates a ListAllPluginsUnauthorized with default headers values
func NewListAllPluginsUnauthorized() *ListAllPluginsUnauthorized {
	return &ListAllPluginsUnauthorized{}
}

/*
ListAllPluginsUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListAllPluginsUnauthorized struct {
}

// IsSuccess returns true when this list all plugins unauthorized response has a 2xx status code
func (o *ListAllPluginsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list all plugins unauthorized response has a 3xx status code
func (o *ListAllPluginsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list all plugins unauthorized response has a 4xx status code
func (o *ListAllPluginsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list all plugins unauthorized response has a 5xx status code
func (o *ListAllPluginsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list all plugins unauthorized response a status code equal to that given
func (o *ListAllPluginsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list all plugins unauthorized response
func (o *ListAllPluginsUnauthorized) Code() int {
	return 401
}

func (o *ListAllPluginsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /plugins][%d] listAllPluginsUnauthorized ", 401)
}

func (o *ListAllPluginsUnauthorized) String() string {
	return fmt.Sprintf("[GET /plugins][%d] listAllPluginsUnauthorized ", 401)
}

func (o *ListAllPluginsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAllPluginsForbidden creates a ListAllPluginsForbidden with default headers values
func NewListAllPluginsForbidden() *ListAllPluginsForbidden {
	return &ListAllPluginsForbidden{}
}

/*
ListAllPluginsForbidden describes a response with status code 403, with default header values.

User is not authorized
*/
type ListAllPluginsForbidden struct {
}

// IsSuccess returns true when this list all plugins forbidden response has a 2xx status code
func (o *ListAllPluginsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list all plugins forbidden response has a 3xx status code
func (o *ListAllPluginsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list all plugins forbidden response has a 4xx status code
func (o *ListAllPluginsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list all plugins forbidden response has a 5xx status code
func (o *ListAllPluginsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list all plugins forbidden response a status code equal to that given
func (o *ListAllPluginsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list all plugins forbidden response
func (o *ListAllPluginsForbidden) Code() int {
	return 403
}

func (o *ListAllPluginsForbidden) Error() string {
	return fmt.Sprintf("[GET /plugins][%d] listAllPluginsForbidden ", 403)
}

func (o *ListAllPluginsForbidden) String() string {
	return fmt.Sprintf("[GET /plugins][%d] listAllPluginsForbidden ", 403)
}

func (o *ListAllPluginsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
