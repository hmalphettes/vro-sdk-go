// Code generated by go-swagger; DO NOT EDIT.

package resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ImportResourceReader is a Reader for the ImportResource structure.
type ImportResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewImportResourceAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportResourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /resources] importResource", response, response.Code())
	}
}

// NewImportResourceAccepted creates a ImportResourceAccepted with default headers values
func NewImportResourceAccepted() *ImportResourceAccepted {
	return &ImportResourceAccepted{}
}

/*
ImportResourceAccepted describes a response with status code 202, with default header values.

Resource successfully imported
*/
type ImportResourceAccepted struct {
}

// IsSuccess returns true when this import resource accepted response has a 2xx status code
func (o *ImportResourceAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import resource accepted response has a 3xx status code
func (o *ImportResourceAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import resource accepted response has a 4xx status code
func (o *ImportResourceAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this import resource accepted response has a 5xx status code
func (o *ImportResourceAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this import resource accepted response a status code equal to that given
func (o *ImportResourceAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the import resource accepted response
func (o *ImportResourceAccepted) Code() int {
	return 202
}

func (o *ImportResourceAccepted) Error() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceAccepted ", 202)
}

func (o *ImportResourceAccepted) String() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceAccepted ", 202)
}

func (o *ImportResourceAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportResourceBadRequest creates a ImportResourceBadRequest with default headers values
func NewImportResourceBadRequest() *ImportResourceBadRequest {
	return &ImportResourceBadRequest{}
}

/*
ImportResourceBadRequest describes a response with status code 400, with default header values.

Request is not valid (validation error)
*/
type ImportResourceBadRequest struct {
}

// IsSuccess returns true when this import resource bad request response has a 2xx status code
func (o *ImportResourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import resource bad request response has a 3xx status code
func (o *ImportResourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import resource bad request response has a 4xx status code
func (o *ImportResourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import resource bad request response has a 5xx status code
func (o *ImportResourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import resource bad request response a status code equal to that given
func (o *ImportResourceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import resource bad request response
func (o *ImportResourceBadRequest) Code() int {
	return 400
}

func (o *ImportResourceBadRequest) Error() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceBadRequest ", 400)
}

func (o *ImportResourceBadRequest) String() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceBadRequest ", 400)
}

func (o *ImportResourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportResourceUnauthorized creates a ImportResourceUnauthorized with default headers values
func NewImportResourceUnauthorized() *ImportResourceUnauthorized {
	return &ImportResourceUnauthorized{}
}

/*
ImportResourceUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type ImportResourceUnauthorized struct {
}

// IsSuccess returns true when this import resource unauthorized response has a 2xx status code
func (o *ImportResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import resource unauthorized response has a 3xx status code
func (o *ImportResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import resource unauthorized response has a 4xx status code
func (o *ImportResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import resource unauthorized response has a 5xx status code
func (o *ImportResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import resource unauthorized response a status code equal to that given
func (o *ImportResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import resource unauthorized response
func (o *ImportResourceUnauthorized) Code() int {
	return 401
}

func (o *ImportResourceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceUnauthorized ", 401)
}

func (o *ImportResourceUnauthorized) String() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceUnauthorized ", 401)
}

func (o *ImportResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportResourceNotFound creates a ImportResourceNotFound with default headers values
func NewImportResourceNotFound() *ImportResourceNotFound {
	return &ImportResourceNotFound{}
}

/*
ImportResourceNotFound describes a response with status code 404, with default header values.

Cannot find resource category with the specified name
*/
type ImportResourceNotFound struct {
}

// IsSuccess returns true when this import resource not found response has a 2xx status code
func (o *ImportResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import resource not found response has a 3xx status code
func (o *ImportResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import resource not found response has a 4xx status code
func (o *ImportResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this import resource not found response has a 5xx status code
func (o *ImportResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this import resource not found response a status code equal to that given
func (o *ImportResourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the import resource not found response
func (o *ImportResourceNotFound) Code() int {
	return 404
}

func (o *ImportResourceNotFound) Error() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceNotFound ", 404)
}

func (o *ImportResourceNotFound) String() string {
	return fmt.Sprintf("[POST /resources][%d] importResourceNotFound ", 404)
}

func (o *ImportResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
