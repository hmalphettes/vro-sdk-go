// Code generated by go-swagger; DO NOT EDIT.

package resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportResourceReader is a Reader for the ExportResource structure.
type ExportResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /resources/{id}] exportResource", response, response.Code())
	}
}

// NewExportResourceOK creates a ExportResourceOK with default headers values
func NewExportResourceOK() *ExportResourceOK {
	return &ExportResourceOK{}
}

/*
ExportResourceOK describes a response with status code 200, with default header values.

The request is successful
*/
type ExportResourceOK struct {
}

// IsSuccess returns true when this export resource o k response has a 2xx status code
func (o *ExportResourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export resource o k response has a 3xx status code
func (o *ExportResourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export resource o k response has a 4xx status code
func (o *ExportResourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export resource o k response has a 5xx status code
func (o *ExportResourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export resource o k response a status code equal to that given
func (o *ExportResourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export resource o k response
func (o *ExportResourceOK) Code() int {
	return 200
}

func (o *ExportResourceOK) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] exportResourceOK ", 200)
}

func (o *ExportResourceOK) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] exportResourceOK ", 200)
}

func (o *ExportResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportResourceUnauthorized creates a ExportResourceUnauthorized with default headers values
func NewExportResourceUnauthorized() *ExportResourceUnauthorized {
	return &ExportResourceUnauthorized{}
}

/*
ExportResourceUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type ExportResourceUnauthorized struct {
}

// IsSuccess returns true when this export resource unauthorized response has a 2xx status code
func (o *ExportResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export resource unauthorized response has a 3xx status code
func (o *ExportResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export resource unauthorized response has a 4xx status code
func (o *ExportResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export resource unauthorized response has a 5xx status code
func (o *ExportResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export resource unauthorized response a status code equal to that given
func (o *ExportResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export resource unauthorized response
func (o *ExportResourceUnauthorized) Code() int {
	return 401
}

func (o *ExportResourceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] exportResourceUnauthorized ", 401)
}

func (o *ExportResourceUnauthorized) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] exportResourceUnauthorized ", 401)
}

func (o *ExportResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportResourceNotFound creates a ExportResourceNotFound with default headers values
func NewExportResourceNotFound() *ExportResourceNotFound {
	return &ExportResourceNotFound{}
}

/*
ExportResourceNotFound describes a response with status code 404, with default header values.

Cannot find resource with the specified ID
*/
type ExportResourceNotFound struct {
}

// IsSuccess returns true when this export resource not found response has a 2xx status code
func (o *ExportResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export resource not found response has a 3xx status code
func (o *ExportResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export resource not found response has a 4xx status code
func (o *ExportResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this export resource not found response has a 5xx status code
func (o *ExportResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this export resource not found response a status code equal to that given
func (o *ExportResourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the export resource not found response
func (o *ExportResourceNotFound) Code() int {
	return 404
}

func (o *ExportResourceNotFound) Error() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] exportResourceNotFound ", 404)
}

func (o *ExportResourceNotFound) String() string {
	return fmt.Sprintf("[GET /resources/{id}][%d] exportResourceNotFound ", 404)
}

func (o *ExportResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
