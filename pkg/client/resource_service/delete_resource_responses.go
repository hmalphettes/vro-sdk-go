// Code generated by go-swagger; DO NOT EDIT.

package resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteResourceReader is a Reader for the DeleteResource structure.
type DeleteResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /resources/{id}] deleteResource", response, response.Code())
	}
}

// NewDeleteResourceNoContent creates a DeleteResourceNoContent with default headers values
func NewDeleteResourceNoContent() *DeleteResourceNoContent {
	return &DeleteResourceNoContent{}
}

/*
DeleteResourceNoContent describes a response with status code 204, with default header values.

The request is successful
*/
type DeleteResourceNoContent struct {
}

// IsSuccess returns true when this delete resource no content response has a 2xx status code
func (o *DeleteResourceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resource no content response has a 3xx status code
func (o *DeleteResourceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource no content response has a 4xx status code
func (o *DeleteResourceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resource no content response has a 5xx status code
func (o *DeleteResourceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource no content response a status code equal to that given
func (o *DeleteResourceNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete resource no content response
func (o *DeleteResourceNoContent) Code() int {
	return 204
}

func (o *DeleteResourceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNoContent ", 204)
}

func (o *DeleteResourceNoContent) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNoContent ", 204)
}

func (o *DeleteResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourceUnauthorized creates a DeleteResourceUnauthorized with default headers values
func NewDeleteResourceUnauthorized() *DeleteResourceUnauthorized {
	return &DeleteResourceUnauthorized{}
}

/*
DeleteResourceUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type DeleteResourceUnauthorized struct {
}

// IsSuccess returns true when this delete resource unauthorized response has a 2xx status code
func (o *DeleteResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource unauthorized response has a 3xx status code
func (o *DeleteResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource unauthorized response has a 4xx status code
func (o *DeleteResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource unauthorized response has a 5xx status code
func (o *DeleteResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource unauthorized response a status code equal to that given
func (o *DeleteResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete resource unauthorized response
func (o *DeleteResourceUnauthorized) Code() int {
	return 401
}

func (o *DeleteResourceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceUnauthorized ", 401)
}

func (o *DeleteResourceUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceUnauthorized ", 401)
}

func (o *DeleteResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourceNotFound creates a DeleteResourceNotFound with default headers values
func NewDeleteResourceNotFound() *DeleteResourceNotFound {
	return &DeleteResourceNotFound{}
}

/*
DeleteResourceNotFound describes a response with status code 404, with default header values.

Cannot find an resource with the specified ID
*/
type DeleteResourceNotFound struct {
}

// IsSuccess returns true when this delete resource not found response has a 2xx status code
func (o *DeleteResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource not found response has a 3xx status code
func (o *DeleteResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource not found response has a 4xx status code
func (o *DeleteResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource not found response has a 5xx status code
func (o *DeleteResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource not found response a status code equal to that given
func (o *DeleteResourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete resource not found response
func (o *DeleteResourceNotFound) Code() int {
	return 404
}

func (o *DeleteResourceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNotFound ", 404)
}

func (o *DeleteResourceNotFound) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}][%d] deleteResourceNotFound ", 404)
}

func (o *DeleteResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
