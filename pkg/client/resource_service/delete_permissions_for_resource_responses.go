// Code generated by go-swagger; DO NOT EDIT.

package resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeletePermissionsForResourceReader is a Reader for the DeletePermissionsForResource structure.
type DeletePermissionsForResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePermissionsForResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePermissionsForResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePermissionsForResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /resources/{id}/permissions] deletePermissionsForResource", response, response.Code())
	}
}

// NewDeletePermissionsForResourceNoContent creates a DeletePermissionsForResourceNoContent with default headers values
func NewDeletePermissionsForResourceNoContent() *DeletePermissionsForResourceNoContent {
	return &DeletePermissionsForResourceNoContent{}
}

/*
DeletePermissionsForResourceNoContent describes a response with status code 204, with default header values.

No content
*/
type DeletePermissionsForResourceNoContent struct {
}

// IsSuccess returns true when this delete permissions for resource no content response has a 2xx status code
func (o *DeletePermissionsForResourceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete permissions for resource no content response has a 3xx status code
func (o *DeletePermissionsForResourceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete permissions for resource no content response has a 4xx status code
func (o *DeletePermissionsForResourceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete permissions for resource no content response has a 5xx status code
func (o *DeletePermissionsForResourceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete permissions for resource no content response a status code equal to that given
func (o *DeletePermissionsForResourceNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete permissions for resource no content response
func (o *DeletePermissionsForResourceNoContent) Code() int {
	return 204
}

func (o *DeletePermissionsForResourceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}/permissions][%d] deletePermissionsForResourceNoContent ", 204)
}

func (o *DeletePermissionsForResourceNoContent) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}/permissions][%d] deletePermissionsForResourceNoContent ", 204)
}

func (o *DeletePermissionsForResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePermissionsForResourceUnauthorized creates a DeletePermissionsForResourceUnauthorized with default headers values
func NewDeletePermissionsForResourceUnauthorized() *DeletePermissionsForResourceUnauthorized {
	return &DeletePermissionsForResourceUnauthorized{}
}

/*
DeletePermissionsForResourceUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type DeletePermissionsForResourceUnauthorized struct {
}

// IsSuccess returns true when this delete permissions for resource unauthorized response has a 2xx status code
func (o *DeletePermissionsForResourceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete permissions for resource unauthorized response has a 3xx status code
func (o *DeletePermissionsForResourceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete permissions for resource unauthorized response has a 4xx status code
func (o *DeletePermissionsForResourceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete permissions for resource unauthorized response has a 5xx status code
func (o *DeletePermissionsForResourceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete permissions for resource unauthorized response a status code equal to that given
func (o *DeletePermissionsForResourceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete permissions for resource unauthorized response
func (o *DeletePermissionsForResourceUnauthorized) Code() int {
	return 401
}

func (o *DeletePermissionsForResourceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /resources/{id}/permissions][%d] deletePermissionsForResourceUnauthorized ", 401)
}

func (o *DeletePermissionsForResourceUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /resources/{id}/permissions][%d] deletePermissionsForResourceUnauthorized ", 401)
}

func (o *DeletePermissionsForResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
