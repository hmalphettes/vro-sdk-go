// Code generated by go-swagger; DO NOT EDIT.

package content_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ImportContentPackageReader is a Reader for the ImportContentPackage structure.
type ImportContentPackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportContentPackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewImportContentPackageAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportContentPackageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportContentPackageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImportContentPackageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /content/packages] importContentPackage", response, response.Code())
	}
}

// NewImportContentPackageAccepted creates a ImportContentPackageAccepted with default headers values
func NewImportContentPackageAccepted() *ImportContentPackageAccepted {
	return &ImportContentPackageAccepted{}
}

/*
ImportContentPackageAccepted describes a response with status code 202, with default header values.

Package successfully imported
*/
type ImportContentPackageAccepted struct {
}

// IsSuccess returns true when this import content package accepted response has a 2xx status code
func (o *ImportContentPackageAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import content package accepted response has a 3xx status code
func (o *ImportContentPackageAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import content package accepted response has a 4xx status code
func (o *ImportContentPackageAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this import content package accepted response has a 5xx status code
func (o *ImportContentPackageAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this import content package accepted response a status code equal to that given
func (o *ImportContentPackageAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the import content package accepted response
func (o *ImportContentPackageAccepted) Code() int {
	return 202
}

func (o *ImportContentPackageAccepted) Error() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageAccepted ", 202)
}

func (o *ImportContentPackageAccepted) String() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageAccepted ", 202)
}

func (o *ImportContentPackageAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportContentPackageBadRequest creates a ImportContentPackageBadRequest with default headers values
func NewImportContentPackageBadRequest() *ImportContentPackageBadRequest {
	return &ImportContentPackageBadRequest{}
}

/*
ImportContentPackageBadRequest describes a response with status code 400, with default header values.

Request is not valid (validation error)
*/
type ImportContentPackageBadRequest struct {
}

// IsSuccess returns true when this import content package bad request response has a 2xx status code
func (o *ImportContentPackageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import content package bad request response has a 3xx status code
func (o *ImportContentPackageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import content package bad request response has a 4xx status code
func (o *ImportContentPackageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import content package bad request response has a 5xx status code
func (o *ImportContentPackageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import content package bad request response a status code equal to that given
func (o *ImportContentPackageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import content package bad request response
func (o *ImportContentPackageBadRequest) Code() int {
	return 400
}

func (o *ImportContentPackageBadRequest) Error() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageBadRequest ", 400)
}

func (o *ImportContentPackageBadRequest) String() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageBadRequest ", 400)
}

func (o *ImportContentPackageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportContentPackageUnauthorized creates a ImportContentPackageUnauthorized with default headers values
func NewImportContentPackageUnauthorized() *ImportContentPackageUnauthorized {
	return &ImportContentPackageUnauthorized{}
}

/*
ImportContentPackageUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type ImportContentPackageUnauthorized struct {
}

// IsSuccess returns true when this import content package unauthorized response has a 2xx status code
func (o *ImportContentPackageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import content package unauthorized response has a 3xx status code
func (o *ImportContentPackageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import content package unauthorized response has a 4xx status code
func (o *ImportContentPackageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import content package unauthorized response has a 5xx status code
func (o *ImportContentPackageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import content package unauthorized response a status code equal to that given
func (o *ImportContentPackageUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import content package unauthorized response
func (o *ImportContentPackageUnauthorized) Code() int {
	return 401
}

func (o *ImportContentPackageUnauthorized) Error() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageUnauthorized ", 401)
}

func (o *ImportContentPackageUnauthorized) String() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageUnauthorized ", 401)
}

func (o *ImportContentPackageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportContentPackageConflict creates a ImportContentPackageConflict with default headers values
func NewImportContentPackageConflict() *ImportContentPackageConflict {
	return &ImportContentPackageConflict{}
}

/*
ImportContentPackageConflict describes a response with status code 409, with default header values.

One or more package elements have an older version.
*/
type ImportContentPackageConflict struct {
}

// IsSuccess returns true when this import content package conflict response has a 2xx status code
func (o *ImportContentPackageConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import content package conflict response has a 3xx status code
func (o *ImportContentPackageConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import content package conflict response has a 4xx status code
func (o *ImportContentPackageConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this import content package conflict response has a 5xx status code
func (o *ImportContentPackageConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this import content package conflict response a status code equal to that given
func (o *ImportContentPackageConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the import content package conflict response
func (o *ImportContentPackageConflict) Code() int {
	return 409
}

func (o *ImportContentPackageConflict) Error() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageConflict ", 409)
}

func (o *ImportContentPackageConflict) String() string {
	return fmt.Sprintf("[POST /content/packages][%d] importContentPackageConflict ", 409)
}

func (o *ImportContentPackageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
