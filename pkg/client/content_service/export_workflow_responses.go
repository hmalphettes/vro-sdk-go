// Code generated by go-swagger; DO NOT EDIT.

package content_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ExportWorkflowReader is a Reader for the ExportWorkflow structure.
type ExportWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportWorkflowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /content/workflows/{workflowId}] exportWorkflow", response, response.Code())
	}
}

// NewExportWorkflowOK creates a ExportWorkflowOK with default headers values
func NewExportWorkflowOK() *ExportWorkflowOK {
	return &ExportWorkflowOK{}
}

/*
ExportWorkflowOK describes a response with status code 200, with default header values.

The request is successful
*/
type ExportWorkflowOK struct {
}

// IsSuccess returns true when this export workflow o k response has a 2xx status code
func (o *ExportWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export workflow o k response has a 3xx status code
func (o *ExportWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export workflow o k response has a 4xx status code
func (o *ExportWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export workflow o k response has a 5xx status code
func (o *ExportWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export workflow o k response a status code equal to that given
func (o *ExportWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export workflow o k response
func (o *ExportWorkflowOK) Code() int {
	return 200
}

func (o *ExportWorkflowOK) Error() string {
	return fmt.Sprintf("[GET /content/workflows/{workflowId}][%d] exportWorkflowOK ", 200)
}

func (o *ExportWorkflowOK) String() string {
	return fmt.Sprintf("[GET /content/workflows/{workflowId}][%d] exportWorkflowOK ", 200)
}

func (o *ExportWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportWorkflowUnauthorized creates a ExportWorkflowUnauthorized with default headers values
func NewExportWorkflowUnauthorized() *ExportWorkflowUnauthorized {
	return &ExportWorkflowUnauthorized{}
}

/*
ExportWorkflowUnauthorized describes a response with status code 401, with default header values.

User is not authorized
*/
type ExportWorkflowUnauthorized struct {
}

// IsSuccess returns true when this export workflow unauthorized response has a 2xx status code
func (o *ExportWorkflowUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export workflow unauthorized response has a 3xx status code
func (o *ExportWorkflowUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export workflow unauthorized response has a 4xx status code
func (o *ExportWorkflowUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export workflow unauthorized response has a 5xx status code
func (o *ExportWorkflowUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export workflow unauthorized response a status code equal to that given
func (o *ExportWorkflowUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export workflow unauthorized response
func (o *ExportWorkflowUnauthorized) Code() int {
	return 401
}

func (o *ExportWorkflowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /content/workflows/{workflowId}][%d] exportWorkflowUnauthorized ", 401)
}

func (o *ExportWorkflowUnauthorized) String() string {
	return fmt.Sprintf("[GET /content/workflows/{workflowId}][%d] exportWorkflowUnauthorized ", 401)
}

func (o *ExportWorkflowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportWorkflowNotFound creates a ExportWorkflowNotFound with default headers values
func NewExportWorkflowNotFound() *ExportWorkflowNotFound {
	return &ExportWorkflowNotFound{}
}

/*
ExportWorkflowNotFound describes a response with status code 404, with default header values.

Cannot find a workflow with the specified ID.
*/
type ExportWorkflowNotFound struct {
}

// IsSuccess returns true when this export workflow not found response has a 2xx status code
func (o *ExportWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export workflow not found response has a 3xx status code
func (o *ExportWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export workflow not found response has a 4xx status code
func (o *ExportWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this export workflow not found response has a 5xx status code
func (o *ExportWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this export workflow not found response a status code equal to that given
func (o *ExportWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the export workflow not found response
func (o *ExportWorkflowNotFound) Code() int {
	return 404
}

func (o *ExportWorkflowNotFound) Error() string {
	return fmt.Sprintf("[GET /content/workflows/{workflowId}][%d] exportWorkflowNotFound ", 404)
}

func (o *ExportWorkflowNotFound) String() string {
	return fmt.Sprintf("[GET /content/workflows/{workflowId}][%d] exportWorkflowNotFound ", 404)
}

func (o *ExportWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
